#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö QML –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
–£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–º–µ–Ω–µ–Ω—ã –º–æ–¥—É–ª—å–Ω—ã–º–∏ –≤–µ—Ä—Å–∏—è–º–∏
"""

from pathlib import Path
from datetime import datetime
import shutil

def cleanup_old_components():
    """–£–¥–∞–ª–∏—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã"""
    
    print("=" * 70)
    print("üßπ –û–ß–ò–°–¢–ö–ê –£–°–¢–ê–†–ï–í–®–ò–• QML –ö–û–ú–ü–û–ù–ï–ù–¢–û–í")
    print("=" * 70)
    print()
    
    # –°–ø–∏—Å–æ–∫ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ñ–∞–π–ª–æ–≤
    old_files = [
        "assets/qml/components/CorrectedSuspensionCorner.qml",  # –ó–∞–º–µ–Ω—ë–Ω –Ω–∞ geometry/SuspensionCorner.qml
        "assets/qml/components/Materials.qml",                   # –ó–∞–º–µ–Ω—ë–Ω –Ω–∞ scene/SharedMaterials.qml  
        "assets/qml/UFrameScene.qml",                            # –°—Ç–∞—Ä–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Å—Ü–µ–Ω–∞
        "assets/qml/main_interactive_frame.qml",                 # –°—Ç–∞—Ä–∞—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è
    ]
    
    removed_count = 0
    backed_up_count = 0
    not_found_count = 0
    
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    backup_dir = Path(f"assets/qml/backup_{timestamp}")
    
    for file_path_str in old_files:
        file_path = Path(file_path_str)
        
        if not file_path.exists():
            print(f"‚è≠Ô∏è  {file_path.name}: –ù–ï –ù–ê–ô–î–ï–ù (—É–∂–µ —É–¥–∞–ª—ë–Ω)")
            not_found_count += 1
            continue
        
        print(f"üìÅ –û–±—Ä–∞–±–æ—Ç–∫–∞: {file_path}")
        
        # –°–æ–∑–¥–∞—ë–º backup –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
        if not backup_dir.exists():
            backup_dir.mkdir(parents=True)
            print(f"   üíæ –°–æ–∑–¥–∞–Ω–∞ backup –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {backup_dir}")
        
        # –ö–æ–ø–∏—Ä—É–µ–º –≤ backup
        backup_path = backup_dir / file_path.name
        shutil.copy2(file_path, backup_path)
        backed_up_count += 1
        print(f"   ‚úÖ –°–æ—Ö—Ä–∞–Ω—ë–Ω backup: {backup_path.name}")
        
        # –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
        file_path.unlink()
        removed_count += 1
        print(f"   üóëÔ∏è  –£–¥–∞–ª—ë–Ω: {file_path.name}")
    
    print()
    print("=" * 70)
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –û–ß–ò–°–¢–ö–ò:")
    print("=" * 70)
    print(f"   –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤:      {removed_count}")
    print(f"   –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ backup:  {backed_up_count}")
    print(f"   –£–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–∏:   {not_found_count}")
    print(f"   –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ:    {len(old_files)}")
    
    if backup_dir.exists():
        print()
        print(f"üíæ Backup —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤: {backup_dir}")
    
    print()
    print("=" * 70)
    print("‚úÖ –û–ß–ò–°–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 70)
    
    return removed_count

def validate_modular_structure():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –º–æ–¥—É–ª—å–Ω—ã–µ –∑–∞–º–µ–Ω—ã –Ω–∞ –º–µ—Å—Ç–µ"""
    
    print()
    print("=" * 70)
    print("üîç –ü–†–û–í–ï–†–ö–ê –ú–û–î–£–õ–¨–ù–û–ô –°–¢–†–£–ö–¢–£–†–´")
    print("=" * 70)
    print()
    
    required_modules = {
        "geometry/SuspensionCorner.qml": "assets/qml/geometry/SuspensionCorner.qml",
        "scene/SharedMaterials.qml": "assets/qml/scene/SharedMaterials.qml",
        "geometry/Frame.qml": "assets/qml/geometry/Frame.qml",
        "geometry/CylinderGeometry.qml": "assets/qml/geometry/CylinderGeometry.qml",
        "lighting/DirectionalLights.qml": "assets/qml/lighting/DirectionalLights.qml",
        "lighting/PointLights.qml": "assets/qml/lighting/PointLights.qml",
        "camera/CameraController.qml": "assets/qml/camera/CameraController.qml",
    }
    
    all_present = True
    
    for name, path_str in required_modules.items():
        path = Path(path_str)
        if path.exists():
            size = path.stat().st_size
            print(f"‚úÖ {name}: {size} –±–∞–π—Ç")
        else:
            print(f"‚ùå {name}: –û–¢–°–£–¢–°–¢–í–£–ï–¢!")
            all_present = False
    
    print()
    if all_present:
        print("‚úÖ –í—Å–µ –º–æ–¥—É–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ –º–µ—Å—Ç–µ!")
    else:
        print("‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ù–û: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
    
    print("=" * 70)
    
    return all_present

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print()
    print("üöÄ –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
    print()
    
    # –û—á–∏—Å—Ç–∫–∞
    removed = cleanup_old_components()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    valid = validate_modular_structure()
    
    print()
    if removed > 0 and valid:
        print("üéâ –£–°–ü–ï–•!")
        print(f"   –£–¥–∞–ª–µ–Ω–æ {removed} —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ñ–∞–π–ª–æ–≤")
        print("   –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
    elif removed == 0:
        print("‚úÖ –ù–ï–¢ –ò–ó–ú–ï–ù–ï–ù–ò–ô")
        print("   –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ —Ñ–∞–π–ª—ã —É–∂–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã")
    else:
        print("‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï")
        print("   –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
        print("   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞")

if __name__ == "__main__":
    main()
