#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ QML —Ñ–∞–π–ª–æ–≤
"""

from pathlib import Path
import os


def main():
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–ì–†–£–ó–ö–ò QML –§–ê–ô–õ–û–í")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    cwd = os.getcwd()
    print(f"üìÇ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {cwd}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–∞ —Ñ–∞–π–ª–∞
    files = ["assets/qml/main_optimized.qml", "assets/qml/main.qml"]

    for file_path in files:
        path = Path(file_path)
        exists = path.exists()
        print(f"\nüìÑ {file_path}:")
        print(f"   –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {exists}")

        if exists:
            try:
                stat = path.stat()
                print(f"   –†–∞–∑–º–µ—Ä: {stat.st_size:,} –±–∞–π—Ç")
                print(f"   –ü–æ–ª–Ω—ã–π –ø—É—Ç—å: {path.absolute()}")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ —Ñ–∞–π–ª–∞
                with open(path, "r", encoding="utf-8") as f:
                    first_line = f.readline().strip()
                    print(f"   –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: {first_line}")

            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: {e}")

    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ MainWindow
    print("\nüîÑ –°–ò–ú–£–õ–Ø–¶–ò–Ø –õ–û–ì–ò–ö–ò –ó–ê–ì–†–£–ó–ö–ò:")

    qml_path = Path("assets/qml/main_optimized.qml")
    print(f"1. –ü—Ä–æ–≤–µ—Ä—è–µ–º main_optimized.qml: {qml_path.exists()}")

    if not qml_path.exists():
        print("   ‚ö†Ô∏è –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ main.qml")
        qml_path = Path("assets/qml/main.qml")

    print(f"2. –ò—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏: {qml_path}")
    print(f"   –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {qml_path.exists()}")

    if qml_path.exists():
        print(f"   ‚úÖ –ë—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω: {qml_path.name}")
    else:
        print("   ‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")


if __name__ == "__main__":
    main()
