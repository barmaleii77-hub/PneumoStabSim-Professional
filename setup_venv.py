#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è PneumoStabSim
Virtual environment setup check for PneumoStabSim
"""
import sys
import subprocess
from pathlib import Path

def check_virtual_environment():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ"""
    print("üêç –ü–†–û–í–ï–†–ö–ê –í–ò–†–¢–£–ê–õ–¨–ù–û–ì–û –û–ö–†–£–ñ–ï–ù–ò–Ø")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –ø—É—Ç—å
    python_path = Path(sys.executable)
    print(f"Python –ø—É—Ç—å: {python_path}")
    
    if ".venv" in str(python_path):
        print("‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ")
        venv_path = python_path.parent.parent
        print(f"üìÅ –ü—É—Ç—å –∫ venv: {venv_path}")
    else:
        print("‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ù–ï –∞–∫—Ç–∏–≤–Ω–æ")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: .venv\\Scripts\\activate")
        return False
    
    # –í–µ—Ä—Å–∏—è Python
    python_version = f"{sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}"
    print(f"üêç Python –≤–µ—Ä—Å–∏—è: {python_version}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
    print("\nüì¶ –ü–†–û–í–ï–†–ö–ê –ü–ê–ö–ï–¢–û–í:")
    
    required_packages = [
        "numpy", "scipy", "PySide6", "matplotlib", 
        "PyOpenGL", "PyOpenGL_accelerate"
    ]
    
    missing_packages = []
    
    for package in required_packages:
        try:
            if package == "PyOpenGL_accelerate":
                import OpenGL_accelerate
                print(f"‚úÖ {package}: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            else:
                __import__(package.lower().replace("-", "_"))
                print(f"‚úÖ {package}: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except ImportError:
            print(f"‚ùå {package}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
            missing_packages.append(package)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PySide6 –º–æ–¥—É–ª–∏
    print("\nüé® –ü–†–û–í–ï–†–ö–ê PYSIDE6 –ú–û–î–£–õ–ï–ô:")
    
    pyside6_modules = [
        "PySide6.QtWidgets", "PySide6.QtCore", "PySide6.QtGui",
        "PySide6.QtQuick", "PySide6.QtQuick3D", "PySide6.QtQuickWidgets"
    ]
    
    for module in pyside6_modules:
        try:
            __import__(module)
            print(f"‚úÖ {module}: OK")
        except ImportError as e:
            print(f"‚ùå {module}: –û–®–ò–ë–ö–ê - {e}")
            missing_packages.append(module)
    
    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    if not missing_packages:
        print("üéâ –í–°–ï –ü–ê–ö–ï–¢–´ –£–°–¢–ê–ù–û–í–õ–ï–ù–´ –ü–†–ê–í–ò–õ–¨–ù–û!")
        print("   –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: python app.py")
        return True
    else:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç {len(missing_packages)} –ø–∞–∫–µ—Ç–æ–≤:")
        for package in missing_packages:
            print(f"   - {package}")
        print("\n   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install -r requirements.txt")
        return False

def create_activation_scripts():
    """–°–æ–∑–¥–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    
    # Windows batch —Ñ–∞–π–ª
    activate_bat = """@echo off
echo üêç –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è PneumoStabSim...
call .venv\\Scripts\\activate.bat
echo ‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ
echo üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
echo    python app.py           - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo    python -m pytest tests/ - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤  
echo    pip list               - –°–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤
echo    deactivate             - –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
cmd /k
"""
    
    with open("activate.bat", "w", encoding="utf-8") as f:
        f.write(activate_bat)
    
    print("üìÑ –°–æ–∑–¥–∞–Ω activate.bat –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
    
    # PowerShell —Å–∫—Ä–∏–ø—Ç
    activate_ps1 = """# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è PneumoStabSim
Write-Host "üêç –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è PneumoStabSim..." -ForegroundColor Green
& .venv\\Scripts\\Activate.ps1
Write-Host "‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ" -ForegroundColor Green
Write-Host "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Yellow
Write-Host "   python app.py           - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è" -ForegroundColor Cyan
Write-Host "   python -m pytest tests/ - –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤" -ForegroundColor Cyan  
Write-Host "   pip list               - –°–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤" -ForegroundColor Cyan
Write-Host "   deactivate             - –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è" -ForegroundColor Cyan
"""
    
    with open("activate.ps1", "w", encoding="utf-8") as f:
        f.write(activate_ps1)
    
    print("üìÑ –°–æ–∑–¥–∞–Ω activate.ps1 –¥–ª—è PowerShell")

def check_git_ignore():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å .gitignore –¥–ª—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    gitignore_path = Path(".gitignore")
    
    if gitignore_path.exists():
        content = gitignore_path.read_text(encoding='utf-8')
        if ".venv" not in content:
            print("‚ö†Ô∏è  –î–æ–±–∞–≤—å—Ç–µ .venv –≤ .gitignore")
            with open(".gitignore", "a", encoding="utf-8") as f:
                f.write("\n# Virtual environment\n.venv/\n*.pyc\n__pycache__/\n")
            print("‚úÖ .venv –¥–æ–±–∞–≤–ª–µ–Ω –≤ .gitignore")
    else:
        print("üìÑ –°–æ–∑–¥–∞–µ–º .gitignore")
        gitignore_content = """# Virtual environment
.venv/
*.pyc
__pycache__/

# Logs
logs/
*.log

# IDE
.vscode/
.idea/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Temporary files
*.tmp
*.temp
"""
        with open(".gitignore", "w", encoding="utf-8") as f:
            f.write(gitignore_content)
        print("‚úÖ .gitignore —Å–æ–∑–¥–∞–Ω")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üöÄ –£–°–¢–ê–ù–û–í–ö–ê –í–ò–†–¢–£–ê–õ–¨–ù–û–ì–û –û–ö–†–£–ñ–ï–ù–ò–Ø PNEUMOSTABSIM")
    print("=" * 80)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    env_ok = check_virtual_environment()
    
    print("\n" + "=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã
    create_activation_scripts()
    
    print("\n" + "=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .gitignore
    check_git_ignore()
    
    print("\n" + "=" * 80)
    
    if env_ok:
        print("üéâ –í–ò–†–¢–£–ê–õ–¨–ù–û–ï –û–ö–†–£–ñ–ï–ù–ò–ï –ì–û–¢–û–í–û –ö –†–ê–ë–û–¢–ï!")
        print("\nüí° –ë–´–°–¢–†–´–ô –ó–ê–ü–£–°–ö:")
        print("   Windows:    activate.bat")
        print("   PowerShell: .\\activate.ps1")
        print("   –ö–æ–º–∞–Ω–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞: .venv\\Scripts\\activate")
        print("\nüöÄ –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø:")
        print("   python app.py")
    else:
        print("‚ùå –¢–†–ï–ë–£–ï–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–ö–†–£–ñ–ï–ù–ò–Ø")
        print("   1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ")
        print("   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞–∫–µ—Ç—ã: pip install -r requirements.txt")
        print("   3. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É")
    
    print("=" * 80)

if __name__ == "__main__":
    main()
