#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Comprehensive Qt Quick 3D Effects Discovery Tool
–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–∏–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ Qt
"""

import sys
from pathlib import Path

# Add project root to path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))


def discover_qt_effects():
    """–ò—Å—Å–ª–µ–¥—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã Qt Quick 3D"""

    print("üîç –ü–û–ò–°–ö –î–û–°–¢–£–ü–ù–´–• –≠–§–§–ï–ö–¢–û–í QT QUICK 3D")
    print("=" * 60)

    try:
        from PySide6.QtWidgets import QApplication
        from PySide6.QtQml import QQmlApplicationEngine
        from PySide6.QtCore import QUrl
        import PySide6

        print(f"üì¶ PySide6 –≤–µ—Ä—Å–∏—è: {PySide6.__version__}")

        app = QApplication([])
        engine = QQmlApplicationEngine()

        # –°–ø–∏—Å–æ–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        potential_effects = [
            # –û—Å–Ω–æ–≤–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
            "Bloom",
            "BloomEffect",
            "Glow",
            "GlowEffect",
            # SSAO —ç—Ñ—Ñ–µ–∫—Ç—ã
            "SSAO",
            "SSAOEffect",
            "AmbientOcclusion",
            # Tone mapping
            "ToneMapping",
            "TonemappingEffect",
            "Tonemap",
            # Depth of Field
            "DepthOfField",
            "DepthOfFieldEffect",
            "DOF",
            # –î—Ä—É–≥–∏–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
            "Blur",
            "BlurEffect",
            "MotionBlur",
            "MotionBlurEffect",
            "Vignette",
            "VignetteEffect",
            "ColorGrading",
            "ColorGradingEffect",
            "ChromaticAberration",
            "FilmGrain",
            "Sharpen",
            "Noise",
            # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
            "Fog",
            "FogEffect",
            "Scattering",
            "ScatteringEffect",
            "LensFlare",
            "GodRays",
            "Volumetric",
        ]

        available_effects = []
        unavailable_effects = []

        print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É—é {len(potential_effects)} –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤...\n")

        for effect in potential_effects:
            # –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π QML –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞
            test_qml = f"""
import QtQuick
import QtQuick3D
import QtQuick3D.Effects 6.5

Item {{
    View3D {{
        anchors.fill: parent

        environment: SceneEnvironment {{
            backgroundMode: SceneEnvironment.Color
            clearColor: "#2a2a2a"
        }}

        PerspectiveCamera {{
            position: Qt.vector3d(0, 0, 500)
        }}

        DirectionalLight {{
            brightness: 1.0
        }}

        Model {{
            source: "#Cube"
            materials: PrincipledMaterial {{
                baseColor: "#ff6600"
            }}
        }}

        effects: [
            {effect} {{
                // –û–±—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
                enabled: true
            }}
        ]
    }}
}}
"""

            test_file = project_root / f"temp_test_{effect.lower()}.qml"

            try:
                test_file.write_text(test_qml, encoding="utf-8")

                engine.clearComponentCache()
                url = QUrl.fromLocalFile(str(test_file.absolute()))
                engine.load(url)

                if engine.rootObjects():
                    available_effects.append(effect)
                    print(f"‚úÖ {effect:20} - –î–û–°–¢–£–ü–ï–ù")
                else:
                    unavailable_effects.append(effect)
                    print(f"‚ùå {effect:20} - –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")

            except Exception as e:
                unavailable_effects.append(effect)
                print(f"üí• {effect:20} - –æ—à–∏–±–∫–∞: {str(e)[:30]}...")

            finally:
                if test_file.exists():
                    test_file.unlink()

        print("\n" + "=" * 60)
        print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê:")
        print("=" * 60)

        print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã ({len(available_effects)}):")
        if available_effects:
            for effect in available_effects:
                print(f"   ‚Ä¢ {effect}")
        else:
            print("   –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤")

        print(f"\n‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã ({len(unavailable_effects)}):")
        for effect in unavailable_effects[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10
            print(f"   ‚Ä¢ {effect}")
        if len(unavailable_effects) > 10:
            print(f"   ... –∏ –µ—â–µ {len(unavailable_effects) - 10}")

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QML –∫–æ–¥ –¥–ª—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
        if available_effects:
            print("\nüé® –†–ï–ö–û–ú–ï–ù–î–û–í–ê–ù–ù–´–ô QML –ö–û–î:")
            print("-" * 40)
            print("effects: [")
            for i, effect in enumerate(available_effects):
                comma = "," if i < len(available_effects) - 1 else ""
                print(f"    {effect} {{")
                print("        enabled: true")
                # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
                if "bloom" in effect.lower() or "glow" in effect.lower():
                    print("        threshold: 0.7")
                    print("        intensity: 0.5")
                elif "ssao" in effect.lower():
                    print("        radius: 2.0")
                    print("        strength: 0.5")
                elif "tone" in effect.lower():
                    print("        mode: 1")
                print(f"    }}{comma}")
            print("]")

        app.quit()
        return available_effects

    except Exception as e:
        print(f"üíÄ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback

        traceback.print_exc()
        return []


if __name__ == "__main__":
    try:
        available = discover_qt_effects()

        print("\n" + "üéØ" * 20)
        print("–ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
        print("üéØ" * 20)

        if available:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(available)} —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤!")
            print("üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–π QML –∫–æ–¥ –≤—ã—à–µ –≤ main_v2_realism.qml")
        else:
            print("‚ùå –≠—Ñ—Ñ–µ–∫—Ç—ã –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤ –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ Qt")
            print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ effects: [] –∏ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –æ—Å–≤–µ—â–µ–Ω–∏–∏/–º–∞—Ç–µ—Ä–∏–∞–ª–∞—Ö")

        print("\nüöÄ –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è QML —Ñ–∞–π–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω–æ!")

    except KeyboardInterrupt:
        print("\nüõë –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\nüíÄ –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)
