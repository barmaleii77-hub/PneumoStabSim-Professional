# -*- coding: utf-8 -*-
"""
Control tab for ModesPanel
–í–∫–ª–∞–¥–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–º—É–ª—è—Ü–∏–µ–π (Play/Pause/Stop/Reset)
"""

from PySide6.QtWidgets import (
    QWidget,
    QVBoxLayout,
    QHBoxLayout,
    QPushButton,
    QGroupBox,
    QLabel,
)
from PySide6.QtCore import Signal, Qt
from PySide6.QtGui import QFont

from .state_manager import ModesStateManager


class ControlTab(QWidget):
    """–í–∫–ª–∞–¥–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–º—É–ª—è—Ü–∏–µ–π"""

    # Signals
    simulation_control = Signal(str)  # "start", "stop", "pause", "reset"

    def __init__(self, state_manager: ModesStateManager, parent=None):
        super().__init__(parent)
        self.state_manager = state_manager
        self._simulation_running = False
        self._setup_ui()

    def _setup_ui(self):
        """–°–æ–∑–¥–∞—Ç—å UI"""
        layout = QVBoxLayout(self)
        layout.setContentsMargins(8, 8, 8, 8)
        layout.setSpacing(12)

        # Title
        title_label = QLabel("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–º—É–ª—è—Ü–∏–µ–π")
        title_font = QFont()
        title_font.setPointSize(11)
        title_font.setBold(True)
        title_label.setFont(title_font)
        title_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(title_label)

        # Control buttons group
        control_group = self._create_control_group()
        layout.addWidget(control_group)

        # Status info
        status_group = self._create_status_group()
        layout.addWidget(status_group)

        layout.addStretch()

    def _create_control_group(self) -> QGroupBox:
        """–°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É –∫–Ω–æ–ø–æ–∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        group = QGroupBox("–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")
        layout = QVBoxLayout(group)
        layout.setSpacing(8)

        # Main control buttons row
        buttons_layout = QHBoxLayout()
        buttons_layout.setSpacing(8)

        self.start_button = QPushButton("‚ñ∂ –°—Ç–∞—Ä—Ç")
        self.stop_button = QPushButton("‚èπ –°—Ç–æ–ø")
        self.pause_button = QPushButton("‚è∏ –ü–∞—É–∑–∞")
        self.reset_button = QPushButton("üîÑ –°–±—Ä–æ—Å")

        # Style buttons
        for btn in [
            self.start_button,
            self.stop_button,
            self.pause_button,
            self.reset_button,
        ]:
            btn.setMinimumHeight(35)
            font = btn.font()
            font.setPointSize(10)
            btn.setFont(font)

        # Tooltips
        self.start_button.setToolTip("–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–º—É–ª—è—Ü–∏—é (Space)")
        self.stop_button.setToolTip("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏–º—É–ª—è—Ü–∏—é")
        self.pause_button.setToolTip("–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏–º—É–ª—è—Ü–∏—é (Space)")
        self.reset_button.setToolTip("–°–±—Ä–æ—Å–∏—Ç—å —Å–∏–º—É–ª—è—Ü–∏—é –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é (R)")

        # Connect signals
        self.start_button.clicked.connect(lambda: self._on_control("start"))
        self.stop_button.clicked.connect(lambda: self._on_control("stop"))
        self.pause_button.clicked.connect(lambda: self._on_control("pause"))
        self.reset_button.clicked.connect(lambda: self._on_control("reset"))

        buttons_layout.addWidget(self.start_button)
        buttons_layout.addWidget(self.stop_button)
        buttons_layout.addWidget(self.pause_button)
        buttons_layout.addWidget(self.reset_button)

        layout.addLayout(buttons_layout)

        # Initial state
        self._update_button_states()

        return group

    def _create_status_group(self) -> QGroupBox:
        """–°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—Ç–∞—Ç—É—Å–µ"""
        group = QGroupBox("–°—Ç–∞—Ç—É—Å")
        layout = QVBoxLayout(group)
        layout.setSpacing(4)

        self.status_label = QLabel("‚è∏ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        self.status_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        status_font = QFont()
        status_font.setPointSize(10)
        status_font.setBold(True)
        self.status_label.setFont(status_font)
        layout.addWidget(self.status_label)

        # Info text
        info_label = QLabel(
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤—ã—à–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏–º—É–ª—è—Ü–∏–µ–π.\n"
            "–ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏: Space - —Å—Ç–∞—Ä—Ç/–ø–∞—É–∑–∞, R - —Å–±—Ä–æ—Å"
        )
        info_label.setWordWrap(True)
        info_label.setStyleSheet("color: #888888;")
        info_font = QFont()
        info_font.setPointSize(8)
        info_label.setFont(info_font)
        layout.addWidget(info_label)

        return group

    def _on_control(self, command: str):
        """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        print(f"üéÆ ControlTab: –ö–æ–º–∞–Ω–¥–∞ '{command}'")

        # Update internal state
        if command == "start":
            self._simulation_running = True
            self.status_label.setText("‚ñ∂ –ó–∞–ø—É—â–µ–Ω–æ")
        elif command == "stop":
            self._simulation_running = False
            self.status_label.setText("‚èπ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        elif command == "pause":
            self._simulation_running = False
            self.status_label.setText("‚è∏ –ü–∞—É–∑–∞")
        elif command == "reset":
            self._simulation_running = False
            self.status_label.setText("üîÑ –°–±—Ä–æ—Å...")

        # Update button states
        self._update_button_states()

        # Emit signal
        self.simulation_control.emit(command)

    def _update_button_states(self):
        """–û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ —Å–∏–º—É–ª—è—Ü–∏–∏"""
        self.start_button.setEnabled(not self._simulation_running)
        self.stop_button.setEnabled(self._simulation_running)
        self.pause_button.setEnabled(self._simulation_running)
        self.reset_button.setEnabled(not self._simulation_running)

    def set_simulation_running(self, running: bool):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏–º—É–ª—è—Ü–∏–∏ –∏–∑–≤–Ω–µ"""
        self._simulation_running = running
        self._update_button_states()

        if running:
            self.status_label.setText("‚ñ∂ –ó–∞–ø—É—â–µ–Ω–æ")
        else:
            self.status_label.setText("‚èπ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
