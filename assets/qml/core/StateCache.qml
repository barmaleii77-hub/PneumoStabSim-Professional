pragma Singleton
import QtQuick

/*
 * StateCache.qml - State Caching Utilities (Singleton)
 * PneumoStabSim Professional - Phase 1
 * Version: 1.0.0
 *
 * –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
 * –ê–Ω–∞–ª–æ–≥ animationCache –∏ geometryCache –∏–∑ main.qml
 */
QtObject {
    id: stateCache

    // ===============================================================
    // VERSION INFO
    // ===============================================================
    readonly property string version: "1.0.0"
    readonly property string module: "StateCache"

    // ===============================================================
    // EXTERNAL PROPERTIES (—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –∏–∑ main.qml)
    // ===============================================================

    // Animation parameters
    property real animationTime: 0.0
    property real userFrequency: 0.0
    property real userPhaseGlobal: 0.0
    property real userPhaseFL: 0.0
    property real userPhaseFR: 0.0
    property real userPhaseRL: 0.0
    property real userPhaseRR: 0.0
    property real userAmplitude: 0.0

    // Geometry parameters
    property real userLeverLength: 0.0
    property real userRodPosition: 0.0
    property real userCylinderLength: 0.0
    property real userTrackWidth: 0.0
    property real userFrameLength: 0.0

    // Camera parameters
    property real cameraFov: 60.0

    // ===============================================================
    // ANIMATION CACHE
    // ===============================================================

    // –ë–∞–∑–æ–≤–∞—è —Ñ–∞–∑–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ (–≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è 1 —Ä–∞–∑ –∑–∞ —Ñ—Ä–µ–π–º –≤–º–µ—Å—Ç–æ 4—Ö)
    readonly property real basePhase: animationTime * userFrequency * 2.0 * Math.PI

    // –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ–∞–∑–∞ –≤ —Ä–∞–¥–∏–∞–Ω–∞—Ö
    readonly property real globalPhaseRad: userPhaseGlobal * Math.PI / 180.0

    // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –≤—ã—á–∏—Å–ª–µ–Ω–Ω—ã–µ —Ñ–∞–∑—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ–ª–µ—Å–∞
    readonly property real flPhaseRad: globalPhaseRad + userPhaseFL * Math.PI / 180.0
    readonly property real frPhaseRad: globalPhaseRad + userPhaseFR * Math.PI / 180.0
    readonly property real rlPhaseRad: globalPhaseRad + userPhaseRL * Math.PI / 180.0
    readonly property real rrPhaseRad: globalPhaseRad + userPhaseRR * Math.PI / 180.0

    // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏–Ω—É—Å—ã (4 Math.sin() –≤—ã–∑–æ–≤–∞ ‚Üí 4 –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è)
    readonly property real flSin: Math.sin(basePhase + flPhaseRad)
    readonly property real frSin: Math.sin(basePhase + frPhaseRad)
    readonly property real rlSin: Math.sin(basePhase + rlPhaseRad)
    readonly property real rrSin: Math.sin(basePhase + rrPhaseRad)

    // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≥–ª—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —Ä—ã—á–∞–≥–æ–≤
    readonly property real flAngle: userAmplitude * flSin
    readonly property real frAngle: userAmplitude * frSin
    readonly property real rlAngle: userAmplitude * rlSin
    readonly property real rrAngle: userAmplitude * rrSin

    // ===============================================================
    // GEOMETRY CACHE
    // ===============================================================

    // –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è –¥–ª–∏–Ω–∞ —Ä—ã—á–∞–≥–∞ –¥–æ —Ç–æ—á–∫–∏ –∫—Ä–µ–ø–ª–µ–Ω–∏—è —à—Ç–æ–∫–∞
    readonly property real leverLengthRodPos: userLeverLength * userRodPosition

    // –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã (–∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ)
    readonly property real piOver180: Math.PI / 180.0
    readonly property real deg180OverPi: 180.0 / Math.PI

    // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∫–∞–º–µ—Ä—ã
    readonly property real cachedFovRad: cameraFov * piOver180
    readonly property real cachedTanHalfFov: Math.tan(cachedFovRad / 2.0)

    // –ü–æ–ª–æ–≤–∏–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã (—á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ)
    readonly property real halfTrackWidth: userTrackWidth / 2.0
    readonly property real halfFrameLength: userFrameLength / 2.0

    // ===============================================================
    // SUSPENSION POSITION CACHE
    // ===============================================================

    /**
     * –ö—ç—à –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –ª–µ–≤—ã—Ö/–ø—Ä–∞–≤—ã—Ö —É–≥–ª–æ–≤
     * –í—ã—á–∏—Å–ª—è–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ
     */
    readonly property real leftBaseAngle: 180.0
    readonly property real rightBaseAngle: 0.0

    /**
     * –ü–æ–ª–Ω—ã–µ —É–≥–ª—ã —Ä—ã—á–∞–≥–æ–≤ (–±–∞–∑–æ–≤—ã–π + –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ)
     */
    readonly property real flTotalAngle: leftBaseAngle + flAngle
    readonly property real frTotalAngle: rightBaseAngle + frAngle
    readonly property real rlTotalAngle: leftBaseAngle + rlAngle
    readonly property real rrTotalAngle: rightBaseAngle + rrAngle

    // ===============================================================
    // PERFORMANCE MONITORING
    // ===============================================================

    // –°—á–µ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –∫—ç—à–∞
    property int updateCount: 0

    // –¢–∞–π–º–µ—Ä –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    property real lastUpdateTime: 0.0
    property real updateDelta: 0.0

    onAnimationTimeChanged: {
        var now = Date.now()
        updateDelta = now - lastUpdateTime
        lastUpdateTime = now
        updateCount++
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
     */
    function getPerformanceStats() {
        return {
            updateCount: updateCount,
            lastDelta: updateDelta,
            fps: updateDelta > 0 ? 1000.0 / updateDelta : 0,
            cachedValues: 15  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        }
    }

    /**
     * –°–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç—á–∏–∫–∏
     */
    function resetStats() {
        updateCount = 0
        lastUpdateTime = Date.now()
        updateDelta = 0.0
    }

    // ===============================================================
    // UTILITY FUNCTIONS
    // ===============================================================

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É–≥–æ–ª –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–µ—Å–∞
     *
     * @param wheelId - "fl", "fr", "rl", –∏–ª–∏ "rr"
     * @returns Number - –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —É–≥–æ–ª
     */
    function getCachedAngle(wheelId) {
        switch (wheelId) {
            case "fl": return flAngle
            case "fr": return frAngle
            case "rl": return rlAngle
            case "rr": return rrAngle
            default: return 0.0
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª–Ω—ã–π —É–≥–æ–ª –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–µ—Å–∞
     *
     * @param wheelId - "fl", "fr", "rl", –∏–ª–∏ "rr"
     * @returns Number - –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª–Ω—ã–π —É–≥–æ–ª
     */
    function getCachedTotalAngle(wheelId) {
        switch (wheelId) {
            case "fl": return flTotalAngle
            case "fr": return frTotalAngle
            case "rl": return rlTotalAngle
            case "rr": return rrTotalAngle
            default: return 0.0
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫—ç—à–∞
     *
     * @returns Boolean - true –µ—Å–ª–∏ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∞–ª–∏–¥–Ω—ã
     */
    function isReady() {
        return userFrequency > 0 &&
               userLeverLength > 0 &&
               userRodPosition > 0 &&
               userCylinderLength > 0 &&
               userTrackWidth > 0 &&
               userFrameLength > 0
    }

    // ===============================================================
    // DEBUGGING
    // ===============================================================

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫—ç—à–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
     */
    function debugState() {
        return {
            // Animation
            animationTime: animationTime,
            basePhase: basePhase,
            angles: {
                fl: flAngle,
                fr: frAngle,
                rl: rlAngle,
                rr: rrAngle
            },
            totalAngles: {
                fl: flTotalAngle,
                fr: frTotalAngle,
                rl: rlTotalAngle,
                rr: rrTotalAngle
            },
            // Geometry
            leverLengthRodPos: leverLengthRodPos,
            halfTrackWidth: halfTrackWidth,
            halfFrameLength: halfFrameLength,
            // Performance
            updateCount: updateCount,
            updateDelta: updateDelta
        }
    }

    // ===============================================================
    // INITIALIZATION
    // ===============================================================

    Component.onCompleted: {
        console.log("‚úÖ StateCache Singleton initialized (v" + version + ")")
        console.log("   ‚ö° Animation cache: 8 pre-computed values")
        console.log("   üìê Geometry cache: 7 pre-computed values")
        console.log("   üìä Performance monitoring enabled")

        lastUpdateTime = Date.now()
    }
}
