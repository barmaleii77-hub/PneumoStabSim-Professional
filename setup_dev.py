#!/usr/bin/env python3
"""
Setup script –¥–ª—è PneumoStabSim Professional
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
"""

import sys
import subprocess
import platform
from pathlib import Path


def run_command(cmd, check=True):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —Å –≤—ã–≤–æ–¥–æ–º"""
    print(f"üîß –í—ã–ø–æ–ª–Ω—è–µ–º: {' '.join(cmd) if isinstance(cmd, list) else cmd}")
    try:
        result = subprocess.run(
            cmd, shell=True, check=check, capture_output=True, text=True
        )
        if result.stdout:
            print(result.stdout)
        return result.returncode == 0
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        if e.stderr:
            print(f"–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {e.stderr}")
        return False


def check_python():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    version = sys.version_info
    print(f"üêç –í–µ—Ä—Å–∏—è Python: {version.major}.{version.minor}.{version.micro}")

    if version < (3, 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8+")
        return False
    elif version >= (3, 12):
        print("‚ö†Ô∏è Python 3.12+ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏")

    return True


def setup_venv():
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    venv_path = Path("venv")

    if venv_path.exists():
        print("üì¶ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True

    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    if not run_command([sys.executable, "-m", "venv", "venv"]):
        return False

    return True


def get_pip_command():
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–∞–Ω–¥—É pip –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–∏—Å—Ç–µ–º—ã"""
    if platform.system() == "Windows":
        return "venv\\Scripts\\pip"
    else:
        return "venv/bin/pip"


def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    pip_cmd = get_pip_command()

    print("üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ pip...")
    if not run_command([pip_cmd, "install", "--upgrade", "pip"]):
        return False

    print("üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    if not run_command([pip_cmd, "install", "-r", "requirements.txt"]):
        return False

    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if Path("requirements-dev.txt").exists():
        print("üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...")
        run_command([pip_cmd, "install", "-r", "requirements-dev.txt"], check=False)

    return True


def setup_pre_commit():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ pre-commit hooks"""
    if Path(".pre-commit-config.yaml").exists():
        print("ü™ù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ pre-commit hooks...")
        venv_python = (
            "venv\\Scripts\\python"
            if platform.system() == "Windows"
            else "venv/bin/python"
        )
        run_command([venv_python, "-m", "pre_commit", "install"], check=False)


def create_directories():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    dirs = ["logs", "tests", "docs", "build", "dist"]

    for dir_name in dirs:
        dir_path = Path(dir_name)
        if not dir_path.exists():
            print(f"üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {dir_name}")
            dir_path.mkdir(parents=True, exist_ok=True)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è PneumoStabSim Professional")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    if not check_python():
        sys.exit(1)

    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    create_directories()

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not setup_venv():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ")
        sys.exit(1)

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if not install_dependencies():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        sys.exit(1)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ pre-commit
    setup_pre_commit()

    print("\n" + "=" * 50)
    print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")

    if platform.system() == "Windows":
        print("1. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: venv\\Scripts\\activate")
    else:
        print("1. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: source venv/bin/activate")

    print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: py app.py")
    print("3. –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ VS Code –∏–ª–∏ Visual Studio")

    print("\nüõ†Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
    print("- py app.py                 # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("- py app.py --debug         # –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏")
    print("- py app.py --safe-mode     # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º")
    print("- py apply_patches.py       # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ç—á–µ–π")
    print("- pytest tests/             # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤")


if __name__ == "__main__":
    main()
