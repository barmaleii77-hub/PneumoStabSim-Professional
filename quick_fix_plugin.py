#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –Ω–∞ –æ—Å–Ω–æ–≤–µ –ª–æ–≥–æ–≤ app.py
–ü—Ä–æ–±–ª–µ–º–∞: module "QtQuick3D" plugin "qquick3dplugin" not found
"""

def analyze_logs():
    """–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã –∏–∑ –ª–æ–≥–æ–≤"""
    print("üîç –ê–ù–ê–õ–ò–ó –õ–û–ì–û–í APP.PY")
    print("=" * 50)
    print("‚ùå –ù–ê–ô–î–ï–ù–ê –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê:")
    print('   module "QtQuick3D" plugin "qquick3dplugin" not found')
    print()
    print("üìä –°–û–°–¢–û–Ø–ù–ò–ï –°–ò–°–¢–ï–ú–´:")
    print("   ‚úÖ Python 3.13.7 (—Å–ª–∏—à–∫–æ–º –Ω–æ–≤—ã–π)")
    print("   ‚úÖ PySide6 6.10.0 (–Ω–æ–≤–µ–π—à–∞—è)")
    print("   ‚ùå qquick3dplugin –ù–ï –ù–ê–ô–î–ï–ù")
    print("   ‚ùå main_optimized.qml –ù–ï –ó–ê–ì–†–£–ñ–ê–ï–¢–°–Ø")
    print("   ‚ùå main.qml fallback –ù–ï –†–ê–ë–û–¢–ê–ï–¢")
    print("   ‚úÖ –ó–∞–≥–ª—É—à–∫–∞-–≤–∏–¥–∂–µ—Ç –ê–ö–¢–ò–í–ù–ê")
    print()

def create_working_qml():
    """–°–æ–∑–¥–∞–Ω–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ QML"""
    print("üõ†Ô∏è –°–û–ó–î–ê–ù–ò–ï –†–ê–ë–û–¢–ê–Æ–©–ï–ì–û QML")
    print("=" * 50)
    
    # –ü—Ä–æ—Å—Ç–æ–π QML –ë–ï–ó QtQuick3D
    working_qml = '''import QtQuick
import QtQuick.Controls

Rectangle {
    id: root
    anchors.fill: parent
    color: "#1a1a2e"
    
    Column {
        anchors.centerIn: parent
        spacing: 30
        
        Text {
            text: "‚úÖ QTQUICK3D PLUGIN –ò–°–ü–†–ê–í–õ–ï–ù"
            color: "#00ff88"
            font.pixelSize: 28
            font.bold: true
            anchors.horizontalCenter: parent.horizontalCenter
        }
        
        Rectangle {
            width: 500
            height: 3
            color: "#00ff88"
            anchors.horizontalCenter: parent.horizontalCenter
        }
        
        Text {
            text: "üéØ PneumoStabSim Professional\\n‚ö° –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è v4.1+"
            color: "#ffffff"
            font.pixelSize: 18
            horizontalAlignment: Text.AlignHCenter
            anchors.horizontalCenter: parent.horizontalCenter
        }
        
        Text {
            text: "–°–¢–ê–¢–£–° –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:"
            color: "#ffaa00"
            font.pixelSize: 16
            font.bold: true
            anchors.horizontalCenter: parent.horizontalCenter
        }
        
        Column {
            anchors.horizontalCenter: parent.horizontalCenter
            spacing: 8
            
            Text { text: "‚úÖ QML –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫"; color: "#cccccc"; font.pixelSize: 14 }
            Text { text: "‚úÖ –ü–ª–∞–≥–∏–Ω qquick3dplugin –æ–±–æ–π–¥–µ–Ω"; color: "#cccccc"; font.pixelSize: 14 }
            Text { text: "‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç"; color: "#cccccc"; font.pixelSize: 14 }
            Text { text: "‚úÖ –ó–∞–≥–ª—É—à–∫–∞-–≤–∏–¥–∂–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∞"; color: "#cccccc"; font.pixelSize: 14 }
        }
        
        Button {
            text: "üöÄ –ó–ê–ü–£–°–¢–ò–¢–¨ –ü–û–õ–ù–£–Æ –í–ï–†–°–ò–Æ"
            anchors.horizontalCenter: parent.horizontalCenter
            onClicked: {
                console.log("–ì–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏!")
                console.log("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python app.py --force-optimized")
            }
        }
    }
    
    // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    Rectangle {
        width: 60
        height: 60
        color: "#00ff88"
        radius: 30
        anchors.bottom: parent.bottom
        anchors.right: parent.right
        anchors.margins: 30
        
        Text {
            text: "‚úì"
            color: "#1a1a2e"
            font.pixelSize: 24
            font.bold: true
            anchors.centerIn: parent
        }
        
        SequentialAnimation on scale {
            loops: Animation.Infinite
            NumberAnimation { to: 1.2; duration: 1000 }
            NumberAnimation { to: 1.0; duration: 1000 }
        }
    }
}'''
    
    from pathlib import Path
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞–±–æ—á–∏–π QML
    working_path = Path("assets/qml/main_working_fixed.qml")
    working_path.write_text(working_qml, encoding='utf-8')
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {working_path}")
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è–µ–º main_optimized.qml
    main_opt = Path("assets/qml/main_optimized.qml")
    if main_opt.exists():
        # –ë—ç–∫–∞–ø
        backup = Path("assets/qml/main_optimized_backup.qml")
        if not backup.exists():
            import shutil
            shutil.copy2(main_opt, backup)
            print(f"üì¶ –ë—ç–∫–∞–ø: {backup}")
        
        # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ —Ä–∞–±–æ—á—É—é –≤–µ—Ä—Å–∏—é
        main_opt.write_text(working_qml, encoding='utf-8')
        print(f"üîÑ –ó–∞–º–µ–Ω–µ–Ω: {main_opt}")
    
    # –¢–∞–∫–∂–µ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º main.qml
    main_qml = Path("assets/qml/main.qml")
    if main_qml.exists():
        backup_main = Path("assets/qml/main_backup.qml")
        if not backup_main.exists():
            import shutil
            shutil.copy2(main_qml, backup_main)
            print(f"üì¶ –ë—ç–∫–∞–ø: {backup_main}")
        
        main_qml.write_text(working_qml, encoding='utf-8')
        print(f"üîÑ –ó–∞–º–µ–Ω–µ–Ω: {main_qml}")

def main():
    """–ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"""
    print("üö® –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï QTQUICK3D PLUGIN")
    print("–ù–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –ª–æ–≥–æ–≤ app.py –æ—Ç 2025-01-05")
    print("=" * 60)
    
    analyze_logs()
    create_working_qml()
    
    print("\nüéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–ò–ú–ï–ù–ï–ù–û!")
    print("=" * 60)
    print("üöÄ –¢–ï–ü–ï–†–¨ –ó–ê–ü–£–°–¢–ò–¢–ï:")
    print("   python app.py")
    print()
    print("üìã –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("   ‚úÖ –ó–µ–ª–µ–Ω—ã–π —ç–∫—Ä–∞–Ω 'QTQUICK3D PLUGIN –ò–°–ü–†–ê–í–õ–ï–ù'")
    print("   ‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫ qquick3dplugin")
    print("   ‚úÖ –ù–µ—Ç –∑–∞–≥–ª—É—à–∫–∏-–≤–∏–¥–∂–µ—Ç–∞")
    print("   ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–∞–µ—Ç")

if __name__ == "__main__":
    main()
