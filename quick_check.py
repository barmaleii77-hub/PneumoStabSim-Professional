#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ PneumoStabSim
"""
import sys

print("=" * 60)
print("üè• –≠–ö–°–ü–†–ï–°–°-–ü–†–û–í–ï–†–ö–ê PNEUMOSTABSIM")
print("=" * 60)

checks = []

# 1. Python
try:
    assert sys.version_info >= (3, 8), "Python 3.8+ required"
    checks.append(("Python", True, f"{sys.version_info.major}.{sys.version_info.minor}"))
except Exception as e:
    checks.append(("Python", False, str(e)))

# 2. PySide6
try:
    from PySide6.QtWidgets import QApplication
    checks.append(("PySide6", True, "OK"))
except ImportError:
    checks.append(("PySide6", False, "Not installed"))

# 3. Project modules
try:
    from src.common import init_logging
    from src.ui.main_window import MainWindow
    checks.append(("Modules", True, "OK"))
except ImportError as e:
    checks.append(("Modules", False, str(e)))

# 4. QML files
try:
    from pathlib import Path
    qml = Path("assets/qml/main_optimized.qml")
    checks.append(("QML", qml.exists(), "Found" if qml.exists() else "Missing"))
except Exception as e:
    checks.append(("QML", False, str(e)))

# Print results
print("\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:\n")
all_ok = True
for name, status, detail in checks:
    icon = "‚úÖ" if status else "‚ùå"
    print(f"  {icon} {name:12} : {detail}")
    if not status:
        all_ok = False

print("\n" + "=" * 60)
if all_ok:
    print("‚úÖ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢ - –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ!")
    print("\n–ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞:")
    print("  py app.py --test-mode")
else:
    print("‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ - —Å–º. –≤—ã—à–µ")

print("=" * 60)
sys.exit(0 if all_ok else 1)
