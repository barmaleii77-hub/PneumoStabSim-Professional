[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "PneumoStabSim-Professional"
version = "0.1.0"
description = "Pneumatic stabilizer simulation with 3D visualization"
keywords = ["pneumatic", "stabilizer", "simulation", "3d", "qt", "pyside6"]
classifiers = [
    "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.13",
  "Topic :: Scientific/Engineering :: Visualization",
]
requires-python = ">=3.13,<3.14"

dependencies = [
    "numpy==2.3.4",
    "scipy==1.16.2",
    "PySide6==6.10.0",
 "pyside6-addons==6.10.0",
    "pyside6-essentials==6.10.0",
    "shiboken6==6.10.0",
    "PyOpenGL==3.1.10",
    "PyOpenGL-accelerate==3.1.10",
"matplotlib==3.10.7",
    "Pillow==12.0.0",
    "psutil==7.1.1",
    "python-dotenv==1.1.1",
    "PyYAML==6.0.3",
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.2",
    "pytest-qt==4.5.0",
    "ruff==0.14.1",
    "mypy==1.18.2",
    "pre-commit==4.3.0",
]
docs = [
    "sphinx==8.1.3",
    "sphinx-rtd-theme==3.0.1",
]
performance = [
    "numba==0.60.0",
    "cython==3.0.11",
]

[project.urls]
"Homepage" = "https://github.com/barmaleii77-hub/PneumoStabSim-Professional"
"Bug Reports" = "https://github.com/barmaleii77-hub/PneumoStabSim-Professional/issues"
"Source" = "https://github.com/barmaleii77-hub/PneumoStabSim-Professional"
"Documentation" = "https://pneumostabsim-professional.readthedocs.io/"

[project.scripts]
pneumostabsim = "app:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["*", "config*"]

[tool.setuptools.package-data]
"*" = ["*.qml", "*.hdr", "*.png", "*.jpg", "*.ico"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
qt_api = "pyside6"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
]
