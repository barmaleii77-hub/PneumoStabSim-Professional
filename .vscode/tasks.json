{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "env: uv sync",
      "type": "shell",
      "command": "uv",
      "args": [
        "sync"
      ],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "presentation": {
        "reveal": "always",
        "panel": "shared",
        "clear": false
      },
      "problemMatcher": [],
      "detail": "Install pinned dependencies into .venv using uv"
    },
    {
      "label": "run: PneumoStabSim",
      "type": "shell",
      "command": "uv",
      "args": [
        "run",
        "python",
        "app.py"
      ],
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "PYTHONPATH": "${workspaceFolder}${pathSeparator}${workspaceFolder}/src"
        }
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated",
        "showReuseMessage": true
      },
      "problemMatcher": [],
      "detail": "Run the main Qt application inside the uv-managed environment"
    },
    {
      "label": "quality: make check",
      "type": "shell",
      "command": "make",
      "args": [
        "check"
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": [],
      "detail": "Run Ruff, mypy, pytest and qmllint just like CI"
    },
    {
      "label": "tests: make test",
      "type": "shell",
      "command": "make",
      "args": [
        "test"
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "new"
      },
      "problemMatcher": [],
      "detail": "Execute the focused pytest suite used in CI"
    },
    {
      "label": "tests: smoke",
      "type": "shell",
      "command": "uv",
      "args": [
        "run",
        "pytest",
        "tests/smoke",
        "-vv",
        "--maxfail=1"
      ],
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "PYTHONPATH": "${workspaceFolder}${pathSeparator}${workspaceFolder}/src"
        }
      },
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": [],
      "detail": "Fast smoke-check of the most critical scenarios"
    },
    {
      "label": "lint: ruff check",
      "type": "shell",
      "command": "uv",
      "args": [
        "run",
        "python",
        "-m",
        "ruff",
        "check",
        "src",
        "tests",
        "tools",
        "app.py"
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": [],
      "detail": "Ruff lint exactly as configured for CI"
    },
    {
      "label": "format: ruff --check",
      "type": "shell",
      "command": "uv",
      "args": [
        "run",
        "python",
        "-m",
        "ruff",
        "format",
        "--check",
        "src",
        "tests",
        "tools",
        "app.py"
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": [],
      "detail": "Verify formatting using Ruff's formatter"
    },
    {
      "label": "typecheck: mypy",
      "type": "shell",
      "command": "uv",
      "args": [
        "run",
        "python",
        "-m",
        "tools.ci_tasks",
        "typecheck"
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "test",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": [],
      "detail": "Run the type-checking routine configured for CI"
    },
    {
      "label": "qml: qmllint targets",
      "type": "shell",
      "command": "make",
      "args": [
        "qml-lint"
      ],
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "group": "build",
      "presentation": {
        "reveal": "always",
        "panel": "shared"
      },
      "problemMatcher": [],
      "detail": "Lint QML files listed in qmllint_targets.txt"
    }
  ]
}
