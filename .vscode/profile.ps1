# ========================================================================
# PNEUMOSTABSIM-PROFESSIONAL POWERSHELL –ü–†–û–§–ò–õ–¨
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ PowerShell –≤ –ø—Ä–æ–µ–∫—Ç–µ
# ========================================================================

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
if ((Get-Location).Path -like "*PneumoStabSim-Professional*") {
    Write-Host "üöÄ –ó–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å PneumoStabSim-Professional" -ForegroundColor Green
    
    # ====================================================================
    # –£–°–¢–ê–ù–û–í–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø
    # ====================================================================
    
    $ProjectRoot = Get-Location
    $env:PYTHONPATH = "$ProjectRoot\src;$ProjectRoot\tests;$ProjectRoot\scripts"
    $env:PYTHONIOENCODING = "utf-8"
    $env:PYTHONDONTWRITEBYTECODE = "1"
    
    # Qt –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    $env:QSG_RHI_BACKEND = "d3d11"
    $env:QT_LOGGING_RULES = "qt.qml.debug=true;js.debug=true"
    
    # ====================================================================
    # –ê–õ–ò–ê–°–´ –î–õ–Ø –ë–´–°–¢–†–û–ì–û –ó–ê–ü–£–°–ö–ê
    # ====================================================================
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    function Run-App { py app.py $args }
    function Run-Debug { py app.py --debug $args }
    function Run-Test { py app.py --test-mode $args }
    function Run-NoBlock { py app.py --no-block $args }
    function Run-Safe { py app.py --safe-mode $args }
    
    Set-Alias -Name app -Value Run-App
    Set-Alias -Name debug -Value Run-Debug
    Set-Alias -Name test -Value Run-Test
    Set-Alias -Name nb -Value Run-NoBlock
    Set-Alias -Name safe -Value Run-Safe
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    function Run-PyTest { py -m pytest tests/ -v --tb=short --color=yes $args }
    function Run-QuickTests { py -m pytest tests/ -v -x --tb=short -k "not ui" $args }
    function Run-PhysicsTests { py -m pytest tests/test_physics*.py tests/test_integration*.py -v $args }
    function Run-UITests { py -m pytest tests/ui/ tests/graphics/ -v --tb=short $args }
    
    Set-Alias -Name pytest -Value Run-PyTest
    Set-Alias -Name qt -Value Run-QuickTests
    Set-Alias -Name pt -Value Run-PhysicsTests
    Set-Alias -Name ut -Value Run-UITests
    
    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –æ—Ç–ª–∞–¥–∫–∞
    function Run-QMLDiag { py qml_diagnostic.py $args }
    function Run-HealthCheck { py scripts/health_check.py $args }
    function Run-CompTest { py scripts/comprehensive_test.py $args }
    function Run-QuickFix { py quick_fix.py $args }
    
    Set-Alias -Name qml -Value Run-QMLDiag
    Set-Alias -Name health -Value Run-HealthCheck
    Set-Alias -Name comp -Value Run-CompTest
    Set-Alias -Name fix -Value Run-QuickFix
    
    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
    function Install-Deps { py -m pip install -r requirements.txt $args }
    function Update-Deps { py -m pip install --upgrade -r requirements.txt $args }
    function Show-Deps { py -m pip freeze $args }
    function Save-Deps { py -m pip freeze > requirements-current.txt }
    
    Set-Alias -Name install -Value Install-Deps
    Set-Alias -Name update -Value Update-Deps
    Set-Alias -Name deps -Value Show-Deps
    Set-Alias -Name save -Value Save-Deps
    
    # –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞
    function Run-Flake8 { py -m flake8 src/ --max-line-length=100 --ignore=E203,W503,E501,F401 $args }
    function Run-Black { py -m black src/ --line-length=100 --target-version=py38 $args }
    function Run-Coverage { py -m pytest --cov=src --cov-report=html --cov-report=term tests/ $args }
    
    Set-Alias -Name lint -Value Run-Flake8
    Set-Alias -Name format -Value Run-Black
    Set-Alias -Name cov -Value Run-Coverage
    
    # Git –∫–æ–º–∞–Ω–¥—ã
    function Git-Status { git status --porcelain $args }
    function Git-Info { 
        Write-Host "–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞:" (git branch --show-current) -ForegroundColor Cyan
        Write-Host "–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç:" (git log -1 --oneline) -ForegroundColor Yellow
        $changedFiles = (git status --porcelain | Measure-Object -Line).Lines
        Write-Host "–°—Ç–∞—Ç—É—Å: $changedFiles –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤" -ForegroundColor Magenta
    }
    
    Set-Alias -Name gs -Value Git-Status
    Set-Alias -Name gi -Value Git-Info
    
    # –£—Ç–∏–ª–∏—Ç—ã
    function Clear-PyCache {
        Write-Host "üßπ –û—á–∏—Å—Ç–∫–∞ Python –∫—ç—à–∞..." -ForegroundColor Yellow
        Get-ChildItem -Path . -Recurse -Name "__pycache__" | ForEach-Object { 
            Remove-Item -Path $_ -Recurse -Force -Verbose 
        }
        Write-Host "‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω!" -ForegroundColor Green
    }
    
    function Show-ProjectInfo {
        Write-Host "üìä –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–†–û–ï–ö–¢–ï PneumoStabSim-Professional" -ForegroundColor Cyan
        Write-Host "=" * 60 -ForegroundColor Gray
        Write-Host "üìÅ –ö–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞: $ProjectRoot" -ForegroundColor White
        Write-Host "üêç Python –ø—É—Ç—å: $env:PYTHONPATH" -ForegroundColor White
        Write-Host "üé® Qt Backend: $env:QSG_RHI_BACKEND" -ForegroundColor White
        Write-Host ""
        Write-Host "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Yellow
        Write-Host "  app, debug, test, nb, safe  - –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è" -ForegroundColor White
        Write-Host "  pytest, qt, pt, ut          - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ" -ForegroundColor White
        Write-Host "  qml, health, comp, fix      - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞" -ForegroundColor White
        Write-Host "  install, update, deps, save - –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏" -ForegroundColor White
        Write-Host "  lint, format, cov           - –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞" -ForegroundColor White
        Write-Host "  gs, gi                      - Git –∫–æ–º–∞–Ω–¥—ã" -ForegroundColor White
        Write-Host "  Clear-PyCache, info         - –£—Ç–∏–ª–∏—Ç—ã" -ForegroundColor White
        Write-Host ""
        Write-Host "üéØ –í–ê–ñ–ù–û: –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è main_optimized.qml (v4.2)" -ForegroundColor Green
        Write-Host "  ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–∏—Ç–∏–≤–æ–≤" -ForegroundColor Green
        Write-Host "  ‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–∏–Ω–µ–º–∞—Ç–∏–∫–∞" -ForegroundColor Green
        Write-Host "=" * 60 -ForegroundColor Gray
    }
    
    Set-Alias -Name cache -Value Clear-PyCache
    Set-Alias -Name info -Value Show-ProjectInfo
    
    # ====================================================================
    # –§–£–ù–ö–¶–ò–ò –ê–í–¢–û–ó–ê–í–ï–†–®–ï–ù–ò–Ø
    # ====================================================================
    
    # –ê–≤—Ç–æ–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–ª—è pytest
    Register-ArgumentCompleter -CommandName Run-PyTest -ScriptBlock {
        param($commandName, $parameterName, $wordToComplete, $commandAst, $fakeBoundParameters)
        
        $testFiles = Get-ChildItem -Path "tests" -Filter "test_*.py" -Recurse | 
                    Select-Object -ExpandProperty Name |
                    ForEach-Object { $_ -replace '\.py$', '' }
        
        $testFiles | Where-Object { $_ -like "$wordToComplete*" }
    }
    
    # ====================================================================
    # –ó–ê–ì–†–£–ó–ö–ê –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–• –ú–û–î–£–õ–ï–ô
    # ====================================================================
    
    # –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JSON (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    if (Get-Module -ListAvailable -Name PowerShellGet) {
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏
    }
    
    # ====================================================================
    # –ü–†–ò–í–ï–¢–°–¢–í–ï–ù–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï
    # ====================================================================
    
    Write-Host ""
    Write-Host "üéØ PneumoStabSim-Professional PowerShell Environment" -ForegroundColor Green
    Write-Host "üìù –î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –≤–≤–µ–¥–∏—Ç–µ: " -NoNewline
    Write-Host "info" -ForegroundColor Yellow
    Write-Host "üöÄ –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤–≤–µ–¥–∏—Ç–µ: " -NoNewline
    Write-Host "app" -ForegroundColor Cyan
    Write-Host ""
    
    # ====================================================================
    # –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
    # ====================================================================
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Python –¥–æ—Å—Ç—É–ø–µ–Ω
    try {
        $pythonVersion = py --version 2>$null
        if ($pythonVersion) {
            Write-Host "üêç $pythonVersion –æ–±–Ω–∞—Ä—É–∂–µ–Ω" -ForegroundColor Green
        }
    }
    catch {
        Write-Host "‚ö†Ô∏è  Python –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ 'py' –¥–æ—Å—Ç—É–ø–µ–Ω –≤ PATH" -ForegroundColor Red
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if (Test-Path "venv\Scripts\activate.ps1") {
        Write-Host "üì¶ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ø–∞–ø–∫–µ 'venv'" -ForegroundColor Green
        Write-Host "üí° –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: " -NoNewline
        Write-Host "venv\Scripts\activate.ps1" -ForegroundColor Yellow
    }
    elseif (Test-Path ".venv\Scripts\activate.ps1") {
        Write-Host "üì¶ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ø–∞–ø–∫–µ '.venv'" -ForegroundColor Green
        Write-Host "üí° –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: " -NoNewline
        Write-Host ".venv\Scripts\activate.ps1" -ForegroundColor Yellow
    }
    
    # ====================================================================
    # –ù–ê–°–¢–†–û–ô–ö–ê –ö–û–î–ò–†–û–í–ö–ò –î–õ–Ø –†–£–°–°–ö–û–ì–û –Ø–ó–´–ö–ê
    # ====================================================================
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º UTF-8 –∫–æ–¥–∏—Ä–æ–≤–∫—É –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    $OutputEncoding = [System.Text.Encoding]::UTF8
    [Console]::OutputEncoding = [System.Text.Encoding]::UTF8
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PowerShell –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä—É—Å—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
    $Host.UI.RawUI.OutputEncoding = [System.Text.Encoding]::UTF8
    
} else {
    Write-Host "‚ÑπÔ∏è  –ü—Ä–æ—Ñ–∏–ª—å PneumoStabSim-Professional –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è)" -ForegroundColor Yellow
}
