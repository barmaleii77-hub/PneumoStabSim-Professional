#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º PneumoStabSim
–£—Å—Ç—Ä–∞–Ω—è–µ—Ç —Ç–∏–ø–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ —Å–±–æ—Ä–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
"""

import os
import sys
import shutil
from pathlib import Path
import json

def fix_missing_init_files():
    """–°–æ–∑–¥–∞—ë—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ __init__.py —Ñ–∞–π–ª—ã"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ __init__.py —Ñ–∞–π–ª–æ–≤...")
    
    init_locations = [
        "src/__init__.py",
        "src/ui/__init__.py",
        "src/ui/panels/__init__.py", 
        "src/ui/widgets/__init__.py",
        "src/runtime/__init__.py",
        "src/common/__init__.py",
        "src/physics/__init__.py",
        "src/pneumo/__init__.py",
        "src/mechanics/__init__.py",
        "src/road/__init__.py",
        "src/app/__init__.py",
        "src/core/__init__.py",
        "tests/__init__.py",
        "tests/ui/__init__.py"
    ]
    
    created = []
    
    for init_path in init_locations:
        path = Path(init_path)
        if not path.exists():
            # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            path.parent.mkdir(parents=True, exist_ok=True)
            
            # –°–æ–∑–¥–∞—ë–º –ø—Ä–æ—Å—Ç–æ–π __init__.py
            with open(path, 'w', encoding='utf-8') as f:
                f.write(f'# {path.parent.name} package\n')
            
            created.append(str(path))
    
    if created:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ __init__.py —Ñ–∞–π–ª–æ–≤: {len(created)}")
        for path in created:
            print(f"   üìÅ {path}")
    else:
        print("‚úÖ –í—Å–µ __init__.py —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ")

def fix_logs_directory():
    """–°–æ–∑–¥–∞—ë—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é logs –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ logs...")
    
    logs_dir = Path("logs")
    if not logs_dir.exists():
        logs_dir.mkdir(parents=True, exist_ok=True)
        print("‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è logs/")
        
        # –°–æ–∑–¥–∞—ë–º .gitignore –¥–ª—è –ª–æ–≥–æ–≤
        gitignore = logs_dir / ".gitignore"
        with open(gitignore, 'w', encoding='utf-8') as f:
            f.write("# Ignore log files\n*.log\n*.txt\n")
        print("‚úÖ –°–æ–∑–¥–∞–Ω logs/.gitignore")
    else:
        print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è logs/ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

def fix_environment_variables():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Qt"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Qt...")
    
    required_env = {
        "QSG_RHI_BACKEND": "d3d11",
        "QSG_INFO": "1",
        "QT_LOGGING_RULES": "js.debug=true;qt.qml.debug=true"
    }
    
    fixed = []
    
    for var, value in required_env.items():
        current = os.environ.get(var)
        if current != value:
            os.environ[var] = value
            fixed.append(f"{var}={value}")
    
    if fixed:
        print(f"‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {len(fixed)}")
        for fix in fixed:
            print(f"   üîß {fix}")
    else:
        print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Qt –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

def fix_qml_permissions():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ QML —Ñ–∞–π–ª–∞–º"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ QML —Ñ–∞–π–ª–∞–º...")
    
    qml_dir = Path("assets/qml")
    if qml_dir.exists():
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
            main_qml = qml_dir / "main.qml"
            if main_qml.exists():
                with open(main_qml, 'r', encoding='utf-8') as f:
                    _ = f.read(100)  # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤
                print("‚úÖ QML —Ñ–∞–π–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è —á—Ç–µ–Ω–∏—è")
            else:
                print("‚ö†Ô∏è assets/qml/main.qml –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        except Exception as e:
            print(f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ QML: {e}")
    else:
        print("‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è assets/qml/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

def create_launcher_script():
    """–°–æ–∑–¥–∞—ë—Ç —É–¥–æ–±–Ω—ã–π launcher —Å–∫—Ä–∏–ø—Ç"""
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ launcher —Å–∫—Ä–∏–ø—Ç–∞...")
    
    launcher_content = '''@echo off
rem PneumoStabSim Launcher
rem –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏

echo ================================================
echo   PneumoStabSim - Pneumatic Stabilizer Simulator
echo   Version: 2.0.0 (Russian UI + Qt Quick 3D)
echo ================================================
echo.

rem –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
set QSG_RHI_BACKEND=d3d11
set QSG_INFO=1
set QT_LOGGING_RULES=js.debug=true;qt.qml.debug=true

rem –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Python
python --version >nul 2>&1
if %errorlevel% neq 0 (
    echo –û–®–ò–ë–ö–ê: Python –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH
    echo –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ PATH
    pause
    exit /b 1
)

rem –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è app.py
if not exist "app.py" (
    echo –û–®–ò–ë–ö–ê: app.py –Ω–µ –Ω–∞–π–¥–µ–Ω
    echo –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
    pause
    exit /b 1
)

echo –ó–∞–ø—É—Å–∫ PneumoStabSim...
echo.

rem –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
python app.py %*

rem –ü–∞—É–∑–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
if %errorlevel% neq 0 (
    echo.
    echo –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–æ–π (–∫–æ–¥: %errorlevel%)
    pause
)
'''
    
    launcher_path = Path("run.bat")
    with open(launcher_path, 'w', encoding='cp1251') as f:  # Windows –∫–æ–¥–∏—Ä–æ–≤–∫–∞ –¥–ª—è .bat
        f.write(launcher_content)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω run.bat launcher")
    print("   –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å —á–µ—Ä–µ–∑: run.bat")

def create_development_config():
    """–°–æ–∑–¥–∞—ë—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"""
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...")
    
    dev_config = {
        "debug_mode": True,
        "log_level": "DEBUG",
        "auto_save_settings": True,
        "render_backend": "d3d11",
        "physics_timestep": 0.001,
        "ui_update_rate": 60,
        "default_window_size": [1400, 900],
        "russian_ui": True,
        "test_mode_duration": 5.0,
        "geometry_defaults": {
            "frame_length": 3.2,
            "frame_height": 0.65,
            "track_width": 1.6,
            "lever_length": 0.8,
            "cylinder_length": 0.5
        }
    }
    
    config_path = Path("dev_config.json")
    with open(config_path, 'w', encoding='utf-8') as f:
        json.dump(dev_config, f, indent=2, ensure_ascii=False)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω dev_config.json")
    print("   –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—Ç–ª–∞–¥–∫–∏")

def fix_import_paths():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–µ–π –∏–º–ø–æ—Ä—Ç–∞...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ sys.path –µ—Å–ª–∏ –µ—ë —Ç–∞–º –Ω–µ—Ç
    current_dir = str(Path.cwd())
    if current_dir not in sys.path:
        sys.path.insert(0, current_dir)
        print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ç–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –≤ sys.path")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏–º–ø–æ—Ä—Ç—ã
    try:
        import src.ui.main_window
        import src.runtime.sim_loop
        import src.common
        print("‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è")
    except ImportError as e:
        print(f"‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏: {e}")

def create_troubleshooting_guide():
    """–°–æ–∑–¥–∞—ë—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º"""
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º...")
    
    guide_content = '''# –†–£–ö–û–í–û–î–°–¢–í–û –ü–û –£–°–¢–†–ê–ù–ï–ù–ò–Æ –ü–†–û–ë–õ–ï–ú
## PneumoStabSim v2.0.0

### –ß–∞—Å—Ç—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ—à–µ–Ω–∏—è

#### 1. –û—à–∏–±–∫–∏ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
**–ü—Ä–æ–±–ª–µ–º–∞:** ImportError, ModuleNotFoundError
**–†–µ—à–µ–Ω–∏–µ:**
```bash
# –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
python build_check.py  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∏–º–ø–æ—Ä—Ç–æ–≤

# –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å:
python fix_build.py    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
```

#### 2. Qt –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è / —á—ë—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω
**–ü—Ä–æ–±–ª–µ–º–∞:** QML –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –æ–∫–Ω–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
**–†–µ—à–µ–Ω–∏–µ:**
```bash
# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:
set QSG_RHI_BACKEND=d3d11
set QSG_INFO=1

# –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏:
python app.py --debug
```

#### 3. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
**–ü—Ä–æ–±–ª–µ–º–∞:** –ü–∞–∫–µ—Ç—ã numpy, PySide6 –∏ –¥—Ä. –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
**–†–µ—à–µ–Ω–∏–µ:**
```bash
pip install -r requirements.txt

# –ò–ª–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏:
pip install numpy==2.3.3 scipy==1.16.2 pyside6==6.9.3
```

#### 4. –û—à–∏–±–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª–∞–º
**–ü—Ä–æ–±–ª–µ–º–∞:** Permission denied, —Ñ–∞–π–ª—ã –Ω–µ —á–∏—Ç–∞—é—Ç—Å—è
**–†–µ—à–µ–Ω–∏–µ:**
- –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å (–º–æ–∂–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å Qt)
- –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª—ã –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã

#### 5. Python –Ω–µ –Ω–∞–π–¥–µ–Ω
**–ü—Ä–æ–±–ª–µ–º–∞:** 'python' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç—Å—è –∫–∞–∫ –∫–æ–º–∞–Ω–¥–∞
**–†–µ—à–µ–Ω–∏–µ:**
- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.9+ —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞
- –î–æ–±–∞–≤—å—Ç–µ Python –≤ PATH
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `py` –≤–º–µ—Å—Ç–æ `python` –≤ Windows

### –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏

```bash
# –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
python build_check.py

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
python fix_build.py  

# –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ (5 —Å–µ–∫—É–Ω–¥)
python app.py --test-mode

# –ó–∞–ø—É—Å–∫ —Å –æ—Ç–ª–∞–¥–∫–æ–π
python app.py --debug

# –ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–π —Ä–µ–∂–∏–º
python app.py --no-block
```

### –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏

- GitHub: https://github.com/barmaleii77-hub/NewRepo2
- Issues: –°–æ–∑–¥–∞–π—Ç–µ issue —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º—ã
- Logs: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ logs/

### –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

- Python 3.9+ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 3.13+)
- Windows 10/11 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
- DirectX 11 —Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è –≤–∏–¥–µ–æ–∫–∞—Ä—Ç–∞
- 4GB RAM –º–∏–Ω–∏–º—É–º
- 2GB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ

### –í–µ—Ä—Å–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: —è–Ω–≤–∞—Ä—å 2025
'''
    
    guide_path = Path("TROUBLESHOOTING.md")
    with open(guide_path, 'w', encoding='utf-8') as f:
        f.write(guide_content)
    
    print("‚úÖ –°–æ–∑–¥–∞–Ω TROUBLESHOOTING.md")
    print("   –ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("üõ†Ô∏è –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú")
    print("PneumoStabSim v2.0.0 Build Fixer")
    print("="*50)
    
    fixes = [
        ("–°–æ–∑–¥–∞–Ω–∏–µ __init__.py —Ñ–∞–π–ª–æ–≤", fix_missing_init_files),
        ("–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ logs", fix_logs_directory),
        ("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è", fix_environment_variables),
        ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ QML", fix_qml_permissions),
        ("–°–æ–∑–¥–∞–Ω–∏–µ launcher —Å–∫—Ä–∏–ø—Ç–∞", create_launcher_script),
        ("–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏", create_development_config),
        ("–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π –∏–º–ø–æ—Ä—Ç–∞", fix_import_paths),
        ("–°–æ–∑–¥–∞–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º", create_troubleshooting_guide),
    ]
    
    print(f"\n–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è {len(fixes)} –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...\n")
    
    for fix_name, fix_func in fixes:
        try:
            fix_func()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ '{fix_name}': {e}")
        print()
    
    print("="*50)
    print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
    print("\n–°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    print("  üìÅ logs/              - –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ª–æ–≥–æ–≤")
    print("  üöÄ run.bat            - Launcher –¥–ª—è Windows")
    print("  ‚öôÔ∏è dev_config.json   - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏") 
    print("  üìñ TROUBLESHOOTING.md - –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –ø—Ä–æ–±–ª–µ–º–∞–º")
    print("\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å:")
    print("  python build_check.py  # –ü—Ä–æ–≤–µ—Ä–∫–∞")
    print("  python app.py          # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    print("  run.bat               # –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ launcher")

if __name__ == "__main__":
    main()
