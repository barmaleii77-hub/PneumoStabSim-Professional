#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –§–ò–ö–°: –£–±–∏—Ä–∞–µ–º z: 1000 –∏–∑ CameraController
–≠—Ç–æ –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ View3D!
"""
import re
from pathlib import Path


def fix_camera_z_order():
    """–£–±–∏—Ä–∞–µ—Ç z: 1000, –∫–æ—Ç–æ—Ä—ã–π –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ View3D"""
    qml_file = Path("assets/qml/main.qml")

    if not qml_file.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {qml_file}")
        return False

    print(f"üìÅ –ß–∏—Ç–∞–µ–º: {qml_file}")
    content = qml_file.read_text(encoding="utf-8")

    # –ò—â–µ–º –∏ —É–¥–∞–ª—è–µ–º z: 1000
    pattern = r"(\s*)z:\s*1000\s*//.*–ø–æ–≤–µ—Ä—Ö.*–º—ã—à–∏"

    if not re.search(pattern, content):
        print("‚ö†Ô∏è –°—Ç—Ä–æ–∫–∞ z: 1000 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ)")
        return True

    # –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫—É
    fixed_content = re.sub(pattern, "", content)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —á—Ç–æ-—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
    if content == fixed_content:
        print("‚ö†Ô∏è –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è")
        return False

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    qml_file.write_text(fixed_content, encoding="utf-8")

    print("‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û:")
    print("   ‚ùå –£–¥–∞–ª–µ–Ω–æ: z: 1000  // –ø–æ–≤–µ—Ä—Ö –≤—Å–µ–≥–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º—ã—à–∏")
    print("   ‚úÖ CameraController —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–∑—Ä–∞—á–µ–Ω –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞")
    print("   ‚úÖ MouseArea –≤—Å—ë —Ä–∞–≤–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –º—ã—à–∏")

    return True


if __name__ == "__main__":
    success = fix_camera_z_order()
    exit(0 if success else 1)
