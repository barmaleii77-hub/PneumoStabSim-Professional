#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≥–µ–æ–º–µ—Ç—Ä–∏–∏ –∫ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ö–µ–º–µ
Test connection of all geometry parameters to animated scene
"""
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–∏–º src –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent / 'src'))

os.environ.setdefault("QSG_RHI_BACKEND", "d3d11")

from PySide6.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QWidget, QLabel, QPushButton, QHBoxLayout
from PySide6.QtCore import Qt, QTimer

from src.ui.panels.panel_geometry import GeometryPanel


class GeometryConnectionTest(QMainWindow):
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≥–µ–æ–º–µ—Ç—Ä–∏–∏"""
    
    def __init__(self):
        super().__init__()
        
        self.setWindowTitle("üîß –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≥–µ–æ–º–µ—Ç—Ä–∏–∏ –∫ 3D —Å—Ö–µ–º–µ")
        self.resize(600, 900)
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central = QWidget()
        self.setCentralWidget(central)
        layout = QVBoxLayout(central)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("–¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –í–°–ï–• –ü–ê–†–ê–ú–ï–¢–†–û–í –ì–ï–û–ú–ï–¢–†–ò–ò")
        title.setAlignment(Qt.AlignmentFlag.AlignCenter)
        title.setStyleSheet("font-size: 14px; font-weight: bold; color: #333; margin: 10px;")
        layout.addWidget(title)
        
        info = QLabel("–ò–∑–º–µ–Ω—è–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã - –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª–∏")
        info.setAlignment(Qt.AlignmentFlag.AlignCenter)
        info.setStyleSheet("font-size: 12px; color: #666; margin-bottom: 20px;")
        layout.addWidget(info)
        
        # –ü–∞–Ω–µ–ª—å –≥–µ–æ–º–µ—Ç—Ä–∏–∏
        self.geometry_panel = GeometryPanel()
        layout.addWidget(self.geometry_panel)
        
        # –õ–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        self.log_label = QLabel("–õ–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10):")
        self.log_label.setStyleSheet("font-weight: bold; margin-top: 20px;")
        layout.addWidget(self.log_label)
        
        self.log_text = QLabel("")
        self.log_text.setWordWrap(True)
        self.log_text.setStyleSheet("background: #f0f0f0; padding: 10px; font-family: monospace; font-size: 10px;")
        self.log_text.setMinimumHeight(200)
        self.log_text.setAlignment(Qt.AlignmentFlag.AlignTop)
        layout.addWidget(self.log_text)
        
        # –ö–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        buttons_layout = QHBoxLayout()
        
        test_all_btn = QPushButton("üß™ –¢–µ—Å—Ç –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
        test_all_btn.clicked.connect(self.test_all_parameters)
        buttons_layout.addWidget(test_all_btn)
        
        clear_log_btn = QPushButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥")
        clear_log_btn.clicked.connect(self.clear_log)
        buttons_layout.addWidget(clear_log_btn)
        
        layout.addLayout(buttons_layout)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –ø–∞–Ω–µ–ª–∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏
        self.connect_signals()
        
        # –õ–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        self.log_entries = []
        
        # –°—á–µ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        self.change_count = 0
    
    def connect_signals(self):
        """–ü–æ–¥–∫–ª—é—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª—ã –ø–∞–Ω–µ–ª–∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏"""
        print("üîß –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ GeometryPanel...")
        
        # 1. parameter_changed - –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        self.geometry_panel.parameter_changed.connect(self.on_parameter_changed)
        print("  ‚úÖ parameter_changed –ø–æ–¥–∫–ª—é—á–µ–Ω")
        
        # 2. geometry_updated - –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ–π –≥–µ–æ–º–µ—Ç—Ä–∏–∏
        self.geometry_panel.geometry_updated.connect(self.on_geometry_updated)
        print("  ‚úÖ geometry_updated –ø–æ–¥–∫–ª—é—á–µ–Ω")
        
        # 3. geometry_changed - –¥–ª—è 3D —Å—Ü–µ–Ω—ã (–æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏–≥–Ω–∞–ª!)
        self.geometry_panel.geometry_changed.connect(self.on_geometry_changed)
        print("  ‚úÖ geometry_changed –ø–æ–¥–∫–ª—é—á–µ–Ω (‚Üí3D —Å—Ü–µ–Ω–∞)")
        
        print("üéØ –í–°–ï –°–ò–ì–ù–ê–õ–´ –ü–û–î–ö–õ–Æ–ß–ï–ù–´!")
    
    def on_parameter_changed(self, param_name: str, value: float):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞"""
        self.change_count += 1
        entry = f"#{self.change_count:03d} PARAM: {param_name} = {value:.3f}"
        self.add_log_entry(entry)
        print(f"üìä {entry}")
    
    def on_geometry_updated(self, params: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ–π –≥–µ–æ–º–µ—Ç—Ä–∏–∏"""
        self.change_count += 1
        param_names = list(params.keys())[:5]  # –ü–µ—Ä–≤—ã–µ 5 –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        entry = f"#{self.change_count:03d} UPDATE: {len(params)} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ [{', '.join(param_names)}...]"
        self.add_log_entry(entry)
        print(f"üîÑ {entry}")
    
    def on_geometry_changed(self, geometry_3d: dict):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥–µ–æ–º–µ—Ç—Ä–∏–∏ –¥–ª—è 3D —Å—Ü–µ–Ω—ã (–û–°–ù–û–í–ù–û–ô –ú–ï–¢–û–î!)"""
        self.change_count += 1
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        frame_length = geometry_3d.get('frameLength', 0)
        lever_length = geometry_3d.get('leverLength', 0)
        cyl_diam = geometry_3d.get('cylDiamM', 0)
        rod_diam = geometry_3d.get('rodDiameterM', 0)
        
        entry = f"#{self.change_count:03d} 3D‚ÜíQML: –†–∞–º–∞={frame_length:.0f}–º–º, –†—ã—á–∞–≥={lever_length:.0f}–º–º, –¶–∏–ª={cyl_diam:.1f}–º–º, –®—Ç–æ–∫={rod_diam:.1f}–º–º"
        self.add_log_entry(entry, is_3d=True)
        print(f"üé¨ {entry}")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤ QML
        print(f"   üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ QML: {len(geometry_3d)} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
        for key, value in list(geometry_3d.items())[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"      {key}: {value}")
        if len(geometry_3d) > 3:
            print(f"      ... –∏ –µ—â–µ {len(geometry_3d) - 3} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
    
    def add_log_entry(self, entry: str, is_3d: bool = False):
        """–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥"""
        if is_3d:
            entry = f"üé¨ {entry}"
        else:
            entry = f"üìä {entry}"
            
        self.log_entries.append(entry)
        if len(self.log_entries) > 10:
            self.log_entries.pop(0)
        
        self.log_text.setText("\n".join(self.log_entries))
    
    def test_all_parameters(self):
        """–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã"""
        print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–°–ï–• –ü–ê–†–ê–ú–ï–¢–†–û–í...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        current = self.geometry_panel.get_parameters()
        print(f"üìä –¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {len(current)}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
        test_values = {
            'wheelbase': 3.5,
            'track': 1.8,
            'lever_length': 0.9,
            'cylinder_length': 0.4,
            'cyl_diam_m': 0.100,
            'rod_diameter_m': 0.040,
            'stroke_m': 0.350,
            'dead_gap_m': 0.010,
        }
        
        for param_name, test_value in test_values.items():
            if param_name in current:
                print(f"üß™ –¢–µ—Å—Ç: {param_name} ‚Üí {test_value}")
                # –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ –º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–µ—Ç–æ–¥
                self.geometry_panel._on_parameter_changed(param_name, test_value)
        
        print("‚úÖ –¢–µ—Å—Ç –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω")
    
    def clear_log(self):
        """–û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥"""
        self.log_entries.clear()
        self.log_text.setText("")
        self.change_count = 0
        print("üóëÔ∏è –õ–æ–≥ –æ—á–∏—â–µ–Ω")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("=" * 70)
    print("üîß –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ü–ê–†–ê–ú–ï–¢–†–û–í –ì–ï–û–ú–ï–¢–†–ò–ò –ö 3D –°–•–ï–ú–ï")
    print("=" * 70)
    print()
    print("–ü–†–û–í–ï–†–Ø–ï–ú:")
    print("‚úÖ –í—Å–µ 12 –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ GeometryPanel –ø–æ–¥–∫–ª—é—á–µ–Ω—ã")
    print("‚úÖ –°–∏–≥–Ω–∞–ª geometry_changed –ø–µ—Ä–µ–¥–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ QML")
    print("‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –º‚Üí–º–º –¥–ª—è QML —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("‚úÖ –ù–æ–≤—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–ú–®-1, –ú–®-2) –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è")
    print()
    print("–ò–ù–°–¢–†–£–ö–¶–ò–ò:")
    print("1. –ò–∑–º–µ–Ω—è–π—Ç–µ —Å–ª–∞–π–¥–µ—Ä—ã - —Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å")
    print("2. –ù–∞–∂–º–∏—Ç–µ '–¢–µ—Å—Ç –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤' –¥–ª—è –∞–≤—Ç–æ—Ç–µ—Å—Ç–∞")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ geometry_changed –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è")
    print()
    print("=" * 70)
    
    app = QApplication(sys.argv)
    window = GeometryConnectionTest()
    window.show()
    sys.exit(app.exec())


if __name__ == "__main__":
    main()
