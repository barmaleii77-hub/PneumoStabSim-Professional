#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è PneumoStabSim Professional
"""
import shutil
from pathlib import Path


def clean_cache():
    """–û—á–∏—Å—Ç–∫–∞ Python cache"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ Python cache...")

    cache_patterns = [
        "**/__pycache__",
        "**/*.pyc",
        "**/*.pyo",
        "**/*.pyd",
        "**/.pytest_cache",
        "**/.mypy_cache",
        "**/.coverage",
        "**/htmlcov",
        "**/*.egg-info",
    ]

    for pattern in cache_patterns:
        for path in Path(".").glob(pattern):
            if path.is_dir():
                print(f"  –£–¥–∞–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {path}")
                shutil.rmtree(path, ignore_errors=True)
            elif path.is_file():
                print(f"  –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {path}")
                path.unlink(missing_ok=True)


def clean_build():
    """–û—á–∏—Å—Ç–∫–∞ build –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ build –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤...")

    build_dirs = ["build", "dist", ".eggs"]

    for dir_name in build_dirs:
        path = Path(dir_name)
        if path.exists():
            print(f"  –£–¥–∞–ª–µ–Ω–∏–µ: {path}")
            shutil.rmtree(path, ignore_errors=True)


def clean_logs():
    """–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤...")

    logs_dir = Path("logs")
    if not logs_dir.exists():
        return

    import time

    current_time = time.time()
    week_ago = current_time - (7 * 24 * 60 * 60)  # 7 –¥–Ω–µ–π –Ω–∞–∑–∞–¥

    for log_file in logs_dir.glob("*.log"):
        if log_file.stat().st_mtime < week_ago:
            print(f"  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –ª–æ–≥–∞: {log_file}")
            log_file.unlink(missing_ok=True)


def clean_temp():
    """–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")

    temp_patterns = [
        "**/*.tmp",
        "**/*.temp",
        "**/Thumbs.db",
        "**/.DS_Store",
        "**/*.rej",  # –§–∞–π–ª—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã—Ö –ø–∞—Ç—á–µ–π
        "**/*~",  # Backup —Ñ–∞–π–ª—ã
    ]

    for pattern in temp_patterns:
        for path in Path(".").glob(pattern):
            if path.is_file():
                print(f"  –£–¥–∞–ª–µ–Ω–∏–µ: {path}")
                path.unlink(missing_ok=True)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ PneumoStabSim Professional")
    print("=" * 45)

    clean_cache()
    clean_build()
    clean_logs()
    clean_temp()

    print("=" * 45)
    print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


if __name__ == "__main__":
    main()
