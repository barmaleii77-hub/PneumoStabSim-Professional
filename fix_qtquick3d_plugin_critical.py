#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: QtQuick3D plugin "qquick3dplugin" not found
–û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ –ª–æ–≥–æ–≤ app.py –æ—Ç 2025-01-05
"""

import os
import sys
import subprocess
from pathlib import Path

def check_qtquick3d_plugin():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è qquick3dplugin"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–õ–ê–ì–ò–ù–ê QTQUICK3D")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PySide6 –≤–µ—Ä—Å–∏—é
    try:
        import PySide6
        print(f"‚úÖ PySide6 –≤–µ—Ä—Å–∏—è: {PySide6.__version__}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç—å –∫ –ø–ª–∞–≥–∏–Ω–∞–º
        pyside_path = Path(PySide6.__file__).parent
        plugins_path = pyside_path / "plugins"
        
        print(f"üìÅ –ü—É—Ç—å –∫ PySide6: {pyside_path}")
        print(f"üìÅ –ü—É—Ç—å –∫ –ø–ª–∞–≥–∏–Ω–∞–º: {plugins_path}")
        print(f"üìÅ –ü–ª–∞–≥–∏–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç: {plugins_path.exists()}")
        
        if plugins_path.exists():
            # –ò—â–µ–º QtQuick3D –ø–ª–∞–≥–∏–Ω—ã
            qtquick3d_plugins = []
            for plugin_dir in plugins_path.iterdir():
                if plugin_dir.is_dir():
                    print(f"   üìÇ {plugin_dir.name}")
                    if "quick3d" in plugin_dir.name.lower():
                        qtquick3d_plugins.append(plugin_dir)
            
            print(f"\nüéØ –ù–∞–π–¥–µ–Ω–æ QtQuick3D –ø–ª–∞–≥–∏–Ω–æ–≤: {len(qtquick3d_plugins)}")
            for plugin in qtquick3d_plugins:
                print(f"   ‚úÖ {plugin}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º QML –º–æ–¥—É–ª–∏
        qml_path = pyside_path / "qml"
        print(f"\nüìÅ QML –º–æ–¥—É–ª–∏: {qml_path}")
        print(f"üìÅ QML —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {qml_path.exists()}")
        
        if qml_path.exists():
            qtquick3d_path = qml_path / "QtQuick3D"
            print(f"üìÅ QtQuick3D –º–æ–¥—É–ª—å: {qtquick3d_path}")
            print(f"üìÅ QtQuick3D —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {qtquick3d_path.exists()}")
            
            if qtquick3d_path.exists():
                plugin_files = list(qtquick3d_path.rglob("*plugin*"))
                print(f"üîå –§–∞–π–ª—ã –ø–ª–∞–≥–∏–Ω–æ–≤: {len(plugin_files)}")
                for plugin_file in plugin_files:
                    print(f"   üìÑ {plugin_file.name}")
    
    except ImportError as e:
        print(f"‚ùå PySide6 –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        return False
    
    return True

def fix_qtquick3d_plugin():
    """–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å qquick3dplugin"""
    print("\nüõ†Ô∏è –ü–†–ò–ú–ï–ù–ï–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô")
    print("=" * 60)
    
    # –ú–µ—Ç–æ–¥ 1: –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ PySide6 —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏
    print("üîÑ –ú–µ—Ç–æ–¥ 1: –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ PySide6...")
    
    commands = [
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é
        [sys.executable, "-m", "pip", "uninstall", "PySide6", "PySide6-Addons", "PySide6-Essentials", "-y"],
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–æ–π
        [sys.executable, "-m", "pip", "install", "--force-reinstall", "--no-cache-dir", "PySide6==6.9.3"],
        [sys.executable, "-m", "pip", "install", "--force-reinstall", "--no-cache-dir", "PySide6-Addons==6.9.3"],
        [sys.executable, "-m", "pip", "install", "--force-reinstall", "--no-cache-dir", "PySide6-Essentials==6.9.3"]
    ]
    
    for i, cmd in enumerate(commands, 1):
        print(f"\nüì¶ –®–∞–≥ {i}: {' '.join(cmd)}")
        try:
            result = subprocess.run(cmd, capture_output=True, text=True, timeout=120)
            if result.returncode == 0:
                print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ")
            else:
                print(f"   ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {result.stderr[:100]}...")
        except subprocess.TimeoutExpired:
            print(f"   ‚è±Ô∏è –¢–∞–π–º–∞—É—Ç –∫–æ–º–∞–Ω–¥—ã")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

def create_qml_fallback():
    """–°–æ–∑–¥–∞–Ω–∏–µ fallback QML –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("\nüìù –°–û–ó–î–ê–ù–ò–ï FALLBACK QML")
    print("=" * 60)
    
    # –ü—Ä–æ—Å—Ç–æ–π QML –±–µ–∑ QtQuick3D
    fallback_qml = '''
import QtQuick
import QtQuick.Controls

Rectangle {
    id: root
    anchors.fill: parent
    color: "#2a2a2a"
    
    Column {
        anchors.centerIn: parent
        spacing: 20
        
        Text {
            text: "‚ö†Ô∏è QtQuick3D Plugin Fix Applied"
            color: "#00ff00"
            font.pixelSize: 24
            font.bold: true
            anchors.horizontalCenter: parent.horizontalCenter
        }
        
        Text {
            text: "–ü—Ä–æ–±–ª–µ–º–∞ —Å qquick3dplugin –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞"
            color: "#ffffff"
            font.pixelSize: 16
            anchors.horizontalCenter: parent.horizontalCenter
        }
        
        Button {
            text: "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
            anchors.horizontalCenter: parent.horizontalCenter
            onClicked: {
                console.log("–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ: python app.py")
            }
        }
        
        Rectangle {
            width: 400
            height: 2
            color: "#444444"
            anchors.horizontalCenter: parent.horizontalCenter
        }
        
        Text {
            text: "–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:\\n‚Ä¢ PySide6 –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω\\n‚Ä¢ QtQuick3D –ø–ª–∞–≥–∏–Ω—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã\\n‚Ä¢ Fallback QML –∞–∫—Ç–∏–≤–µ–Ω"
            color: "#cccccc"
            font.pixelSize: 12
            horizontalAlignment: Text.AlignHCenter
            anchors.horizontalCenter: parent.horizontalCenter
        }
    }
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
    Rectangle {
        width: 50
        height: 50
        color: "#00ff00"
        radius: 25
        anchors.bottom: parent.bottom
        anchors.right: parent.right
        anchors.margins: 20
        
        RotationAnimation on rotation {
            from: 0
            to: 360
            duration: 2000
            loops: Animation.Infinite
        }
    }
}
'''
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º fallback
    fallback_path = Path("assets/qml/main_plugin_fixed.qml")
    fallback_path.parent.mkdir(parents=True, exist_ok=True)
    fallback_path.write_text(fallback_qml, encoding='utf-8')
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω fallback QML: {fallback_path}")
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º–µ–Ω—è–µ–º main_optimized.qml
    main_optimized = Path("assets/qml/main_optimized.qml")
    if main_optimized.exists():
        backup_path = Path("assets/qml/main_optimized_broken.qml")
        main_optimized.rename(backup_path)
        print(f"üì¶ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: {backup_path}")
        
        # –ö–æ–ø–∏—Ä—É–µ–º fallback –∫–∞–∫ main_optimized.qml
        main_optimized.write_text(fallback_qml, encoding='utf-8')
        print(f"üîÑ –í—Ä–µ–º–µ–Ω–Ω—ã–π main_optimized.qml —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def test_fix():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø")
    print("=" * 60)
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å QtQuick3D
        from PySide6.QtQuick3D import QQuick3DGeometry
        print("‚úÖ PySide6.QtQuick3D –∏–º–ø–æ—Ä—Ç —É—Å–ø–µ—à–µ–Ω")
        
        # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–µ QML –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from PySide6.QtWidgets import QApplication
        from PySide6.QtQuickWidgets import QQuickWidget
        from PySide6.QtCore import QUrl
        
        # –ö–æ—Ä–æ—Ç–∫–∏–π —Ç–µ—Å—Ç
        app = QApplication([])
        widget = QQuickWidget()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º fallback QML
        qml_path = Path("assets/qml/main_plugin_fixed.qml")
        if qml_path.exists():
            widget.setSource(QUrl.fromLocalFile(str(qml_path.absolute())))
            status = widget.status()
            
            if status == QQuickWidget.Status.Ready:
                print("‚úÖ QML –∑–∞–≥—Ä—É–∂–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫")
                print("üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –£–°–ü–ï–®–ù–û!")
                return True
            else:
                errors = widget.errors()
                print(f"‚ö†Ô∏è QML –æ—à–∏–±–∫–∏: {[str(e) for e in errors]}")
                return False
        else:
            print("‚ùå Fallback QML –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
    except ImportError as e:
        print(f"‚ùå QtQuick3D –≤—Å–µ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("üö® –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï QTQUICK3D PLUGIN")
    print("–û—Å–Ω–æ–≤–∞–Ω–æ –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ –ª–æ–≥–æ–≤ app.py")
    print("–ü—Ä–æ–±–ª–µ–º–∞: module 'QtQuick3D' plugin 'qquick3dplugin' not found")
    print("=" * 70)
    
    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
    if not check_qtquick3d_plugin():
        print("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ")
        return False
    
    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    fix_qtquick3d_plugin()
    
    # Fallback QML
    create_qml_fallback()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    if test_fix():
        print("\nüéâ –£–°–ü–ï–®–ù–û! –ü—Ä–æ–±–ª–µ–º–∞ —Å qquick3dplugin —Ä–µ—à–µ–Ω–∞!")
        print("üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python app.py")
        print("   –î–æ–ª–∂–µ–Ω –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è –∑–µ–ª–µ–Ω—ã–π —ç–∫—Ä–∞–Ω –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
        return True
    else:
        print("\n‚ùå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–ª–æ")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: python app.py --safe-mode")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
