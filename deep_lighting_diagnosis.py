#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –û–°–í–ï–©–ï–ù–ò–ï–ú
–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—á–µ–º—É –æ—Å–≤–µ—â–µ–Ω–∏–µ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è
"""

import sys
from pathlib import Path


def check_lighting_flow():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ—Å—å –ø–æ—Ç–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å–≤–µ—â–µ–Ω–∏—è"""
    print("üîç –ì–õ–£–ë–û–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–°–í–ï–©–ï–ù–ò–Ø")
    print("=" * 60)

    # 1. –ü—Ä–æ–≤–µ—Ä–∏–º panel_graphics.py
    print("\nüìã 1. –ü–†–û–í–ï–†–ö–ê PANEL_GRAPHICS.PY")
    print("-" * 40)

    graphics_file = Path("src/ui/panels/panel_graphics.py")
    if not graphics_file.exists():
        print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    content = graphics_file.read_text(encoding="utf-8")

    # –ù–∞–π–¥–µ–º —Ñ—É–Ω–∫—Ü–∏—é emit_lighting_update
    if "def emit_lighting_update(self):" in content:
        print("‚úÖ –§—É–Ω–∫—Ü–∏—è emit_lighting_update –Ω–∞–π–¥–µ–Ω–∞")

        # –ù–∞–π–¥–µ–º —á—Ç–æ –æ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç
        lines = content.split("\n")
        in_function = False
        for i, line in enumerate(lines):
            if "def emit_lighting_update(self):" in line:
                in_function = True
                continue
            if (
                in_function
                and line.strip().startswith("def ")
                and not line.strip().startswith("def emit_lighting_update")
            ):
                break
            if in_function and "'keyLightBrightness'" in line:
                print(f"  üì§ –ù–∞–π–¥–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞: {line.strip()}")
            if in_function and "'fillLightBrightness'" in line:
                print(f"  üì§ –ù–∞–π–¥–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞: {line.strip()}")
            if in_function and "'pointLightBrightness'" in line:
                print(f"  üì§ –ù–∞–π–¥–µ–Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞: {line.strip()}")
    else:
        print("‚ùå –§—É–Ω–∫—Ü–∏—è emit_lighting_update –ù–ï –Ω–∞–π–¥–µ–Ω–∞!")
        return False

    # 2. –ü—Ä–æ–≤–µ—Ä–∏–º main_window.py
    print("\nüìã 2. –ü–†–û–í–ï–†–ö–ê MAIN_WINDOW.PY")
    print("-" * 40)

    window_file = Path("src/ui/main_window.py")
    if not window_file.exists():
        print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    window_content = window_file.read_text(encoding="utf-8")

    if "lighting_changed.connect" in window_content:
        print("‚úÖ –°–∏–≥–Ω–∞–ª lighting_changed –ø–æ–¥–∫–ª—é—á–µ–Ω")
    else:
        print("‚ùå –°–∏–≥–Ω–∞–ª lighting_changed –ù–ï –ø–æ–¥–∫–ª—é—á–µ–Ω!")
        return False

    if "_on_lighting_changed" in window_content:
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ _on_lighting_changed –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ _on_lighting_changed –ù–ï –Ω–∞–π–¥–µ–Ω!")
        return False

    # 3. –ù–∞–π–¥–µ–º –∫–∞–∫–æ–π QML —Ñ–∞–π–ª –†–ï–ê–õ–¨–ù–û –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è
    print("\nüìã 3. –ö–ê–ö–û–ô QML –§–ê–ô–õ –ó–ê–ì–†–£–ñ–ê–ï–¢–°–Ø?")
    print("-" * 40)

    if "main_optimized.qml" in window_content:
        qml_file_used = "main_optimized.qml"
        print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è main_optimized.qml")
    elif "main.qml" in window_content:
        qml_file_used = "main.qml"
        print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è main.qml")
    else:
        print("‚ùå –ù–µ –º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–∫–æ–π QML –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!")
        return False

    # 4. –ü—Ä–æ–≤–µ—Ä–∏–º —ç—Ç–æ—Ç QML —Ñ–∞–π–ª
    print(f"\nüìã 4. –ü–†–û–í–ï–†–ö–ê {qml_file_used.upper()}")
    print("-" * 40)

    qml_path = Path(f"assets/qml/{qml_file_used}")
    if not qml_path.exists():
        print(f"‚ùå –§–∞–π–ª {qml_file_used} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False

    qml_content = qml_path.read_text(encoding="utf-8")

    # –ü—Ä–æ–≤–µ—Ä–∏–º —Å–≤–æ–π—Å—Ç–≤–∞
    props_found = 0
    if "property real keyLightBrightness" in qml_content:
        print("‚úÖ property real keyLightBrightness")
        props_found += 1
    else:
        print("‚ùå property real keyLightBrightness –ù–ï –Ω–∞–π–¥–µ–Ω–æ!")

    if "property real fillLightBrightness" in qml_content:
        print("‚úÖ property real fillLightBrightness")
        props_found += 1
    else:
        print("‚ùå property real fillLightBrightness –ù–ï –Ω–∞–π–¥–µ–Ω–æ!")

    if "property real pointLightBrightness" in qml_content:
        print("‚úÖ property real pointLightBrightness")
        props_found += 1
    else:
        print("‚ùå property real pointLightBrightness –ù–ï –Ω–∞–π–¥–µ–Ω–æ!")

    # –ü—Ä–æ–≤–µ—Ä–∏–º —Ñ—É–Ω–∫—Ü–∏—é applyLightingUpdates
    if "function applyLightingUpdates(" in qml_content:
        print("‚úÖ –§—É–Ω–∫—Ü–∏—è applyLightingUpdates –Ω–∞–π–¥–µ–Ω–∞")

        # –ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –æ–Ω–∞ –¥–µ–ª–∞–µ—Ç —Å keyLightBrightness
        if "keyLightBrightness" in qml_content and "DirectionalLight" in qml_content:
            print("‚úÖ keyLightBrightness –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ DirectionalLight")
        else:
            print("‚ùå keyLightBrightness –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ DirectionalLight!")

    else:
        print("‚ùå –§—É–Ω–∫—Ü–∏—è applyLightingUpdates –ù–ï –Ω–∞–π–¥–µ–Ω–∞!")
        return False

    # 5. –ü—Ä–æ–≤–µ—Ä–∏–º –µ—Å—Ç—å –ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç Python
    print(f"\nüìã 5. –ü–†–û–í–ï–†–ö–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–ê –í {qml_file_used.upper()}")
    print("-" * 40)

    if "Connections" in qml_content and "target: rootWindow" in qml_content:
        print("‚úÖ Connections –∫ rootWindow –Ω–∞–π–¥–µ–Ω")

        if "onLighting_changed" in qml_content:
            print("‚úÖ onLighting_changed –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå onLighting_changed –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ù–ï –Ω–∞–π–¥–µ–Ω!")
            return False
    else:
        print("‚ùå Connections –∫ rootWindow –ù–ï –Ω–∞–π–¥–µ–Ω!")
        return False

    return props_found >= 3


def main():
    print("üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–°–í–ï–©–ï–ù–ò–Ø")
    print("=" * 60)
    print("–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—á–µ–º—É –æ—Å–≤–µ—â–µ–Ω–∏–µ –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è...")

    if check_lighting_flow():
        print("\n" + "=" * 60)
        print("‚úÖ –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ù–ê –ú–ï–°–¢–ï")
        print("=" * 60)
        print("–ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤:")
        print("1. üîß –ó–Ω–∞—á–µ–Ω–∏—è –Ω–µ –¥–æ—Ö–æ–¥—è—Ç –æ—Ç —Å–ª–∞–π–¥–µ—Ä–æ–≤ –¥–æ emit_lighting_update")
        print("2. üîß –°–∏–≥–Ω–∞–ª –Ω–µ –¥–æ—Ö–æ–¥–∏—Ç –æ—Ç Python –¥–æ QML")
        print("3. üîß QML –ø–æ–ª—É—á–∞–µ—Ç —Å–∏–≥–Ω–∞–ª –Ω–æ –Ω–µ –ø—Ä–∏–º–µ–Ω—è–µ—Ç –∫ —Å–≤–µ—Ç—É")
        print("4. üîß –°–≤–µ—Ç –µ—Å—Ç—å –Ω–æ –≤–∏–∑—É–∞–ª—å–Ω–æ –Ω–µ –∑–∞–º–µ—Ç–µ–Ω")
        print()
        print("üéØ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è")
        return 0
    else:
        print("\n" + "=" * 60)
        print("‚ùå –ù–ê–ô–î–ï–ù–´ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´")
        print("=" * 60)
        print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã")
        return 1


if __name__ == "__main__":
    sys.exit(main())
