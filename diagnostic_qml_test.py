#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç QML - –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–æ–π —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ª–∏ —ç—Ñ—Ñ–µ–∫—Ç—ã
"""
from pathlib import Path
from PySide6.QtWidgets import QApplication
from PySide6.QtQuickWidgets import QQuickWidget
from PySide6.QtCore import QUrl


def test_qml_loading():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É QML —Ñ–∞–π–ª–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–≤–æ–π—Å—Ç–≤"""

    app = QApplication([])

    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê QML –§–ê–ô–õ–û–í")
    print("=" * 50)

    qml_files = [
        ("main_optimized.qml", "assets/qml/main_optimized.qml"),
        ("main.qml", "assets/qml/main.qml"),
    ]

    for name, path in qml_files:
        print(f"\nüìÅ –¢–µ—Å—Ç–∏—Ä—É–µ–º: {name}")
        print("-" * 30)

        qml_path = Path(path)
        if not qml_path.exists():
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {qml_path}")
            continue

        try:
            # –°–æ–∑–¥–∞–µ–º QQuickWidget
            widget = QQuickWidget()
            widget.setResizeMode(QQuickWidget.ResizeMode.SizeRootObjectToView)

            # –ó–∞–≥—Ä—É–∂–∞–µ–º QML
            qml_url = QUrl.fromLocalFile(str(qml_path.absolute()))
            widget.setSource(qml_url)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
            if widget.status() == QQuickWidget.Status.Error:
                errors = widget.errors()
                print("‚ùå –û—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ QML:")
                for error in errors:
                    print(f"   {error}")
                continue

            # –ü–æ–ª—É—á–∞–µ–º root object
            root = widget.rootObject()
            if not root:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å root object")
                continue

            print("‚úÖ QML –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤
            test_properties = {
                "glassIOR": "–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏—è —Å—Ç–µ–∫–ª–∞",
                "userFrameLength": "–î–ª–∏–Ω–∞ —Ä–∞–º—ã",
                "userTrackWidth": "–ö–æ–ª–µ—è",
                "userRodPosition": "–ü–æ–ª–æ–∂–µ–Ω–∏–µ —à—Ç–æ–∫–∞",
                "bloomEnabled": "Bloom —ç—Ñ—Ñ–µ–∫—Ç",
                "ssaoEnabled": "SSAO —ç—Ñ—Ñ–µ–∫—Ç",
                "metalRoughness": "–®–µ—Ä–æ—Ö–æ–≤–∞—Ç–æ—Å—Ç—å –º–µ—Ç–∞–ª–ª–∞",
                "glassOpacity": "–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —Å—Ç–µ–∫–ª–∞",
            }

            print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–π—Å—Ç–≤:")
            available_props = []
            missing_props = []

            for prop, desc in test_properties.items():
                if root.property(prop) is not None:
                    value = root.property(prop)
                    available_props.append(f"   ‚úÖ {prop}: {value} ({desc})")
                else:
                    missing_props.append(f"   ‚ùå {prop}: –ù–ï–¢ ({desc})")

            for prop in available_props:
                print(prop)
            for prop in missing_props:
                print(prop)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
            update_functions = [
                "updateGeometry",
                "updateMaterials",
                "updateLighting",
                "updateEffects",
                "updateEnvironment",
                "updateQuality",
            ]

            for func_name in update_functions:
                if hasattr(root, func_name):
                    print(f"   ‚úÖ {func_name}() –¥–æ—Å—Ç—É–ø–Ω–∞")
                else:
                    print(f"   ‚ùå {func_name}() –ù–ï –ù–ê–ô–î–ï–ù–ê")

            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤
            print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤:")

            # –¢–µ—Å—Ç 1: –†–∞–∑–º–µ—Ä—ã —Ä–∞–º—ã
            if root.property("userFrameLength") is not None:
                old_frame = root.property("userFrameLength")
                root.setProperty("userFrameLength", 4000.0)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º
                new_frame = root.property("userFrameLength")
                print(
                    f"   üîß –î–ª–∏–Ω–∞ —Ä–∞–º—ã: {old_frame} ‚Üí {new_frame} {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if abs(new_frame - 4000.0) < 1 else '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}"
                )

            # –¢–µ—Å—Ç 2: –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏—è
            if root.property("glassIOR") is not None:
                old_ior = root.property("glassIOR")
                root.setProperty("glassIOR", 1.8)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏–µ
                new_ior = root.property("glassIOR")
                print(
                    f"   üîç IOR —Å—Ç–µ–∫–ª–∞: {old_ior} ‚Üí {new_ior} {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if abs(new_ior - 1.8) < 0.01 else '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}"
                )

            # –¢–µ—Å—Ç 3: Bloom —ç—Ñ—Ñ–µ–∫—Ç
            if root.property("bloomEnabled") is not None:
                root.setProperty("bloomEnabled", True)
                bloom_state = root.property("bloomEnabled")
                print(
                    f"   ‚ú® Bloom: {bloom_state} {'‚úÖ –†–ê–ë–û–¢–ê–ï–¢' if bloom_state else '‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢'}"
                )

            print(f"\nüìä –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –î–õ–Ø {name}:")
            print(f"   –°–≤–æ–π—Å—Ç–≤–∞: {len(available_props)}/{len(test_properties)}")
            print(
                f"   –§—É–Ω–∫—Ü–∏–∏: {sum(1 for f in update_functions if hasattr(root, f))}/{len(update_functions)}"
            )

            widget.deleteLater()

        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            import traceback

            traceback.print_exc()

    print("\n" + "=" * 50)
    print("üèÅ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")

    app.quit()


if __name__ == "__main__":
    test_qml_loading()
