name: CI

on:
  push:
    branches:
      - main
      - develop
      - master
      - feature/**
  pull_request:
    branches:
      - main
      - develop
      - master
      - feature/**
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.13'
  QT_VERSION: '6.10.0'
  QT_MODULES: qtbase qtdeclarative qtquick3d
  QT_QPA_PLATFORM: offscreen
  QT_QUICK_BACKEND: software

jobs:
  lint:
    name: Lint & Type Check (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            requirements*.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Ruff & formatting lint
        shell: bash
        run: |
          python -m tools.ci_tasks lint || { python -m ruff format --check . && python -m ruff check .; }

      - name: Static type checking
        shell: bash
        run: |
          python -m tools.ci_tasks typecheck || python -m mypy .

  tests:
    name: Test matrix (Qt ${{ env.QT_VERSION }})
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: |
            pyproject.toml
            requirements*.txt

      - name: Install Qt ${{ env.QT_VERSION }}
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ env.QT_VERSION }}
          modules: ${{ env.QT_MODULES }}
          cache: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Export Qt plugin paths
        shell: python
        run: |
          import os
          from pathlib import Path
          from PySide6.QtCore import QLibraryInfo, LibraryLocation
          
          env_file = Path(os.environ["GITHUB_ENV"])
          with env_file.open("a", encoding="utf-8") as fh:
            fh.write(f"QT_PLUGIN_PATH={QLibraryInfo.path(LibraryLocation.Plugins)}\n")
            fh.write(f"QML2_IMPORT_PATH={QLibraryInfo.path(LibraryLocation.QmlImports)}\n")

      - name: Run pytest suite
        shell: bash
        env:
          QT_QPA_PLATFORM: ${{ env.QT_QPA_PLATFORM }}
          QT_QUICK_BACKEND: ${{ env.QT_QUICK_BACKEND }}
        run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y xvfb
            xvfb-run --auto-servernum --server-args='-screen 0 1920x1080x24' python -m tools.ci_tasks test || pytest -q
          else
            python -m tools.ci_tasks test || pytest -q
          fi
