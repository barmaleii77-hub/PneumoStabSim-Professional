╔══════════════════════════════════════════════════════════════════════════════╗
║                    QML РЕФАКТОРИНГ - ВИЗУАЛЬНАЯ СХЕМА                        ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────────┐
│ ТЕКУЩЕЕ СОСТОЯНИЕ: main.qml (1400+ строк)                                   │
└─────────────────────────────────────────────────────────────────────────────┘

    ┌──────────────────────────────────────────────────────────┐
    │              main.qml (МОНОЛИТ)                          │
    ├──────────────────────────────────────────────────────────┤
    │  • Properties (геометрия, анимация, графика)   ~200      │
    │  • Utility functions                           ~100      │
    │  • Camera system                               ~150      │
    │  • Animation cache                             ~80       │
    │  • Lighting (4 источника)                      ~120      │
    │  • Materials (8 PBR материалов)                ~200      │
    │  • Suspension geometry (4 угла)                ~300      │
    │  • Environment (IBL, fog, SSAO)                ~100      │
    │  • Effects (bloom, DOF, vignette)              ~80       │
    │  • Mouse controls                              ~100      │
    │  • Batch updates                               ~70       │
    └──────────────────────────────────────────────────────────┘
                            │
                            │
                            ▼

┌─────────────────────────────────────────────────────────────────────────────┐
│ ПОСЛЕ РЕФАКТОРИНГА: Модульная архитектура                                   │
└─────────────────────────────────────────────────────────────────────────────┘

    ┌────────────────────────────────────────────────────────────────┐
    │                main_refactored.qml (~300 строк)                │
    │                      КОМПОЗИТОР                                │
    └────────────────────────────────────────────────────────────────┘
                            │
            ┌───────────────┼───────────────┬──────────────┐
            │               │               │              │
            ▼               ▼               ▼              ▼
    ┌─────────────┐ ┌─────────────┐ ┌──────────────┐ ┌──────────────┐
    │    CORE     │ │   CAMERA    │ │ ENVIRONMENT  │ │   LIGHTING   │
    │   (base)    │ │  (orbital)  │ │  (IBL+FX)    │ │  (3-point)   │
    └─────────────┘ └─────────────┘ └──────────────┘ └──────────────┘
            │               │               │              │
            │               │               ▼              ▼
            │               │      ┌──────────────┐ ┌──────────────┐
            │               │      │ SceneEnv     │ │  KeyLight    │
            │               │      │ IblLoader    │ │  FillLight   │
            │               │      │ Fog          │ │  RimLight    │
            │               │      │ PostEffects  │ │  PointLight  │
            │               │      └──────────────┘ └──────────────┘
            │               │
            │               ▼
            │      ┌──────────────┐
            │      │ OrbitalCamera│
            │      │ Controls     │
            │      │ Defaults     │
            │      └──────────────┘
            │
            ▼
    ┌─────────────┐
    │ Properties  │
    │ StateManager│
    │ UpdateBridge│
    │ MathUtils   │
    └─────────────┘

            ┌──────────────┬──────────────┐
            │              │              │
            ▼              ▼              ▼
    ┌──────────────┐ ┌──────────────┐ ┌──────────────┐
    │  MATERIALS   │ │   GEOMETRY   │ │    UTILS     │
    │  (PBR lib)   │ │ (suspension) │ │  (helpers)   │
    └──────────────┘ └──────────────┘ └──────────────┘
            │              │              │
            ▼              ▼              ▼
    ┌──────────────┐ ┌──────────────┐ ┌──────────────┐
    │ FrameMat     │ │ Frame        │ │ MathUtils    │
    │ LeverMat     │ │ SuspCorner   │ │ GeomCache    │
    │ CylinderMat  │ │ Lever        │ │ AnimCache    │
    │ PistonMat    │ │ Cylinder     │ │ ColorUtils   │
    │ JointMat     │ │ Joints       │ └──────────────┘
    └──────────────┘ └──────────────┘


╔══════════════════════════════════════════════════════════════════════════════╗
║                         СТРУКТУРА КАТАЛОГОВ                                  ║
╚══════════════════════════════════════════════════════════════════════════════╝

assets/qml/
│
├── 📄 main_refactored.qml          # Главный композитор (300 строк)
│
├── 📁 core/                        # 🔵 ФАЗА 1
│   ├── Properties.qml              # Все root properties
│   ├── StateManager.qml            # Управление состоянием
│   └── UpdateBridge.qml            # Python↔QML батч-обновления
│
├── 📁 camera/                      # 🟢 ФАЗА 2
│   ├── OrbitalCamera.qml           # Орбитальная камера
│   ├── CameraControls.qml          # Mouse/keyboard
│   └── CameraDefaults.qml          # Дефолтные значения
│
├── 📁 environment/                 # 🟡 ФАЗА 3
│   ├── SceneEnvironment.qml        # ExtendedSceneEnvironment
│   ├── IblProbeLoader.qml          # ✅ Уже существует
│   ├── Fog.qml                     # Туман Qt 6.10+
│   └── PostEffects.qml             # Bloom, SSAO, DOF
│
├── 📁 lighting/                    # 🟠 ФАЗА 4
│   ├── LightingRig.qml             # Композитор
│   ├── KeyLight.qml                # Главный свет
│   ├── FillLight.qml               # Заполняющий
│   ├── RimLight.qml                # Контровой
│   └── PointLight.qml              # Точечный акцент
│
├── 📁 materials/                   # 🔴 ФАЗА 5
│   ├── MaterialsLibrary.qml        # Библиотека PBR
│   ├── FrameMaterial.qml           # Металл рамы
│   ├── LeverMaterial.qml           # Металл рычагов
│   ├── CylinderMaterial.qml        # Стекло цилиндров
│   └── PistonMaterial.qml          # Поршень + warning
│
├── 📁 geometry/                    # 🟣 ФАЗА 6
│   ├── SuspensionSystem.qml        # Композитор 4 углов
│   ├── SuspensionCorner.qml        # Рефакторинг existing
│   ├── Frame.qml                   # U-рама (3 балки)
│   ├── Lever.qml                   # Рычаг
│   ├── Cylinder.qml                # Цилиндр + поршень
│   └── Joints.qml                  # Шарниры
│
└── 📁 utils/                       # 🔵 ФАЗА 1
    ├── MathUtils.qml               # Математика
    ├── GeometryCache.qml           # Кэш геометрии
    ├── AnimationCache.qml          # Кэш анимации
    └── ColorUtils.qml              # Цвета


╔══════════════════════════════════════════════════════════════════════════════╗
║                      ФАЗЫ РЕФАКТОРИНГА (TIMELINE)                            ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌─ ДЕНЬ 1 ────────────────────────────────────────────────────────────────────┐
│                                                                              │
│  🔵 ФАЗА 1: CORE & UTILS (4-6 часов)                                        │
│  ┌────────────────────────────────────────────────────────────────────────┐ │
│  │ ✅ Создать каталоги core/, utils/                                      │ │
│  │ ✅ Properties.qml - вынести все root properties                        │ │
│  │ ✅ StateManager.qml - управление состоянием                            │ │
│  │ ✅ UpdateBridge.qml - Python↔QML bridge                                │ │
│  │ ✅ MathUtils.qml - математические функции                              │ │
│  │ ✅ AnimationCache.qml, GeometryCache.qml                               │ │
│  └────────────────────────────────────────────────────────────────────────┘ │
│                                                                              │
│  🟢 ФАЗА 2: CAMERA SYSTEM (3-4 часа)                                        │
│  ┌────────────────────────────────────────────────────────────────────────┐ │
│  │ ✅ Создать каталог camera/                                             │ │
│  │ ✅ OrbitalCamera.qml - орбитальная камера                              │ │
│  │ ✅ CameraControls.qml - mouse/keyboard                                 │ │
│  │ ✅ CameraDefaults.qml - дефолтные значения                             │ │
│  │ ✅ Интеграция в main_refactored.qml                                    │ │
│  └────────────────────────────────────────────────────────────────────────┘ │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ ДЕНЬ 2 ────────────────────────────────────────────────────────────────────┐
│                                                                              │
│  🟡 ФАЗА 3: ENVIRONMENT & EFFECTS (4-5 часов)                               │
│  ┌────────────────────────────────────────────────────────────────────────┐ │
│  │ ✅ Создать каталог environment/                                        │ │
│  │ ✅ Адаптировать IblProbeLoader.qml                                     │ │
│  │ ✅ SceneEnvironment.qml - ExtendedSceneEnvironment                     │ │
│  │ ✅ Fog.qml - туман (Qt 6.10+)                                          │ │
│  │ ✅ PostEffects.qml - Bloom, SSAO, DOF, Vignette                        │ │
│  └────────────────────────────────────────────────────────────────────────┘ │
│                                                                              │
│  🟠 ФАЗА 4: LIGHTING SYSTEM (3-4 часа)                                      │
│  ┌────────────────────────────────────────────────────────────────────────┐ │
│  │ ✅ Создать каталог lighting/                                           │ │
│  │ ✅ LightingRig.qml - композитор источников                             │ │
│  │ ✅ KeyLight.qml, FillLight.qml, RimLight.qml, PointLight.qml           │ │
│  │ ✅ Интеграция 3-точечной схемы освещения                               │ │
│  └────────────────────────────────────────────────────────────────────────┘ │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ ДЕНЬ 3 ────────────────────────────────────────────────────────────────────┐
│                                                                              │
│  🔴 ФАЗА 5: MATERIALS LIBRARY (4-5 часов)                                   │
│  ┌────────────────────────────────────────────────────────────────────────┐ │
│  │ ✅ Создать каталог materials/                                          │ │
│  │ ✅ MaterialsLibrary.qml - адаптировать existing                        │ │
│  │ ✅ FrameMaterial, LeverMaterial, CylinderMaterial                      │ │
│  │ ✅ PistonMaterial (с warning цветами)                                  │ │
│  │ ✅ JointMaterial - шарниры                                             │ │
│  └────────────────────────────────────────────────────────────────────────┘ │
│                                                                              │
│  🟣 ФАЗА 6: SUSPENSION GEOMETRY - НАЧАЛО (3-4 часа)                         │
│  ┌────────────────────────────────────────────────────────────────────────┐ │
│  │ ✅ Создать каталог geometry/                                           │ │
│  │ ✅ Frame.qml - U-рама (3 балки)                                        │ │
│  │ ✅ Lever.qml - рычаг                                                   │ │
│  └────────────────────────────────────────────────────────────────────────┘ │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ ДЕНЬ 4 ────────────────────────────────────────────────────────────────────┐
│                                                                              │
│  🟣 ФАЗА 6: SUSPENSION GEOMETRY - ЗАВЕРШЕНИЕ (4-5 часов)                    │
│  ┌────────────────────────────────────────────────────────────────────────┐ │
│  │ ✅ Cylinder.qml - цилиндр + поршень                                    │ │
│  │ ✅ Joints.qml - все шарниры                                            │ │
│  │ ✅ SuspensionCorner.qml - рефакторинг existing                         │ │
│  │ ✅ SuspensionSystem.qml - композитор 4 углов                           │ │
│  └────────────────────────────────────────────────────────────────────────┘ │
│                                                                              │
│  🎯 ФАЗА 7: INTEGRATION - НАЧАЛО (3-4 часа)                                 │
│  ┌────────────────────────────────────────────────────────────────────────┐ │
│  │ ✅ Создать main_refactored.qml                                         │ │
│  │ ✅ Интегрировать все компоненты                                        │ │
│  │ ✅ Первые integration тесты                                            │ │
│  └────────────────────────────────────────────────────────────────────────┘ │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ ДЕНЬ 5 ────────────────────────────────────────────────────────────────────┐
│                                                                              │
│  🎯 ФАЗА 7: INTEGRATION & TESTING - ЗАВЕРШЕНИЕ (весь день)                  │
│  ┌────────────────────────────────────────────────────────────────────────┐ │
│  │ ✅ Регрессионное тестирование                                          │ │
│  │ ✅ Python↔QML коммуникация                                             │ │
│  │ ✅ Профилирование производительности                                   │ │
│  │ ✅ Оптимизация FPS                                                     │ │
│  │ ✅ Документация API                                                    │ │
│  │ ✅ Финальная проверка всех функций                                     │ │
│  └────────────────────────────────────────────────────────────────────────┘ │
└──────────────────────────────────────────────────────────────────────────────┘


╔══════════════════════════════════════════════════════════════════════════════╗
║                      МЕТРИКИ КАЧЕСТВА (ДО/ПОСЛЕ)                             ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌────────────────────┬──────────────────┬──────────────────────────────────────┐
│     МЕТРИКА        │   ДО (main.qml)  │  ПОСЛЕ (main_refactored.qml)         │
├────────────────────┼──────────────────┼──────────────────────────────────────┤
│ Размер главного    │   1400+ строк    │  ~300 строк (композитор)             │
│ файла              │                  │                                      │
├────────────────────┼──────────────────┼──────────────────────────────────────┤
│ Количество         │   3 компонента   │  ~25 модульных компонентов           │
│ компонентов        │                  │                                      │
├────────────────────┼──────────────────┼──────────────────────────────────────┤
│ Модульность        │   Низкая         │  Высокая                             │
│                    │   (монолит)      │  (каждый файл <400 строк)            │
├────────────────────┼──────────────────┼──────────────────────────────────────┤
│ Поддерживаемость   │   Средняя        │  Отличная                            │
│                    │   (сложно найти) │  (четкая структура каталогов)        │
├────────────────────┼──────────────────┼──────────────────────────────────────┤
│ Тестируемость      │   Низкая         │  Высокая                             │
│                    │   (all-in-one)   │  (изолированные unit-тесты)          │
├────────────────────┼──────────────────┼──────────────────────────────────────┤
│ Переиспользование  │   Нет            │  Да (материалы, освещение, камера)   │
├────────────────────┼──────────────────┼──────────────────────────────────────┤
│ Производительность │   60+ FPS        │  60+ FPS (с оптимизациями кэша)      │
├────────────────────┼──────────────────┼──────────────────────────────────────┤
│ Документация       │   Комментарии    │  + QML_API_REFERENCE.md              │
│                    │   в коде         │  + Inline документация компонентов   │
└────────────────────┴──────────────────┴──────────────────────────────────────┘


╔══════════════════════════════════════════════════════════════════════════════╗
║                      ПРИМЕР: ДО И ПОСЛЕ РЕФАКТОРИНГА                         ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌─ ДО (main.qml) ─────────────────────────────────────────────────────────────┐
│                                                                              │
│  Item {                                                                      │
│      // 200 строк properties                                                │
│      property real userFrameLength: 3200                                    │
│      property real cameraDistance: 3500                                     │
│      property color frameBaseColor: "#c53030"                               │
│      // ...                                                                 │
│                                                                              │
│      // 100 строк functions                                                │
│      function clamp(v, a, b) { ... }                                        │
│      function normAngleDeg(a) { ... }                                       │
│      // ...                                                                 │
│                                                                              │
│      // 150 строк camera                                                   │
│      Node {                                                                 │
│          id: cameraRig                                                      │
│          // ...                                                             │
│      }                                                                      │
│                                                                              │
│      // 200 строк materials                                                │
│      PrincipledMaterial { id: frameMaterial ... }                           │
│      // ...                                                                 │
│                                                                              │
│      // 300 строк geometry                                                 │
│      Model { source: "#Cube" ... }                                          │
│      // ...                                                                 │
│                                                                              │
│      // 100 строк mouse controls                                           │
│      MouseArea { ... }                                                      │
│  }                                                                           │
│                                                                              │
│  📊 ИТОГО: 1400+ строк в одном файле                                        │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ ПОСЛЕ (main_refactored.qml) ───────────────────────────────────────────────┐
│                                                                              │
│  import QtQuick                                                              │
│  import QtQuick3D                                                            │
│  import "core"                                                               │
│  import "camera"                                                             │
│  import "environment"                                                        │
│  import "lighting"                                                           │
│  import "materials"                                                          │
│  import "geometry"                                                           │
│                                                                              │
│  Item {                                                                      │
│      id: root                                                                │
│      anchors.fill: parent                                                   │
│                                                                              │
│      // ✨ Базовые свойства вынесены в Properties.qml                       │
│      Properties { id: props }                                               │
│                                                                              │
│      View3D {                                                                │
│          anchors.fill: parent                                                │
│                                                                              │
│          // ✨ Окружение вынесено в SceneEnvironment.qml                    │
│          environment: SceneEnvironment { id: sceneEnv }                      │
│                                                                              │
│          // ✨ Камера вынесена в OrbitalCamera.qml                          │
│          OrbitalCamera {                                                     │
│              id: camera                                                      │
│              distance: props.cameraDistance                                  │
│          }                                                                   │
│                                                                              │
│          // ✨ Освещение вынесено в LightingRig.qml                         │
│          LightingRig { id: lights }                                          │
│                                                                              │
│          // ✨ Геометрия вынесена в SuspensionSystem.qml                    │
│          SuspensionSystem {                                                  │
│              id: suspension                                                  │
│              frameGeometry: props.frameGeometry                              │
│              materials: MaterialsLibrary { id: materials }                   │
│          }                                                                   │
│      }                                                                       │
│                                                                              │
│      // ✨ Контроллы камеры вынесены в CameraControls.qml                   │
│      CameraControls {                                                        │
│          camera: camera                                                      │
│      }                                                                       │
│                                                                              │
│      // ✨ Python↔QML bridge вынесен в UpdateBridge.qml                     │
│      UpdateBridge {                                                          │
│          target: root                                                        │
│          onGeometryUpdated: suspension.applyGeometry(params)                 │
│          onLightingUpdated: lights.applyLighting(params)                     │
│          // ...                                                              │
│      }                                                                       │
│  }                                                                           │
│                                                                              │
│  📊 ИТОГО: ~300 строк (КОМПОЗИТОР)                                          │
│  ✅ Вся логика в модульных компонентах                                       │
└──────────────────────────────────────────────────────────────────────────────┘


╔══════════════════════════════════════════════════════════════════════════════╗
║                          СЛЕДУЮЩИЙ ШАГ: ФАЗА 1                              ║
╚══════════════════════════════════════════════════════════════════════════════╝

Готов начать рефакторинг с Фазы 1: Core & Utils?

🔵 ФАЗА 1 ВКЛЮЧАЕТ:
  ├── Создание каталогов core/, utils/
  ├── Properties.qml (все root properties)
  ├── StateManager.qml (управление состоянием)
  ├── UpdateBridge.qml (Python↔QML батч-обновления)
  ├── MathUtils.qml (clamp, normAngleDeg, resolveUrl)
  ├── AnimationCache.qml (кэш sin/cos для анимации)
  └── GeometryCache.qml (кэш геометрических вычислений)

⏱️ ВРЕМЯ: 4-6 часов
🎯 ЦЕЛЬ: Базовая инфраструктура для всех остальных фаз

Запускаем? 🚀
