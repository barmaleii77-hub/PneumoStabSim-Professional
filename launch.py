#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Launcher script for PneumoStabSim
Provides convenient ways to launch the application
"""
import sys
import os
import subprocess
import time

def print_help():
    """Print help information"""
    print("üöÄ PneumoStabSim Launcher")
    print("=" * 50)
    print()
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
    print()
    print("  python launch.py                    # –û–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫ (–±–ª–æ–∫–∏—Ä—É–µ—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª)")
    print("  python launch.py --no-block        # –ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–π –∑–∞–ø—É—Å–∫")
    print("  python launch.py --test            # –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º (5 —Å–µ–∫)")
    print("  python launch.py --legacy          # Legacy OpenGL —Ä–µ–∂–∏–º")
    print("  python launch.py --debug           # –° –æ—Ç–ª–∞–¥–∫–æ–π")
    print("  python launch.py --help            # –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞")
    print()
    print("–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
    print("  python launch.py --no-block --debug  # –ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–π + –æ—Ç–ª–∞–¥–∫–∞")
    print("  python launch.py --test --legacy     # –¢–µ—Å—Ç + legacy OpenGL")
    print()
    print("–ü—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ (—Ç–æ –∂–µ —Å–∞–º–æ–µ):")
    print("  python app.py --no-block           # –ù–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ app.py")
    print()
    print("üí° –°–æ–≤–µ—Ç—ã:")
    print("  - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --no-block –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ä–º–∏–Ω–∞–ª")
    print("  - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --test –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—Å–∫–∞")
    print("  - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --legacy –µ—Å–ª–∏ Qt Quick 3D –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("  - Ctrl+C –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")

def main():
    """Main launcher function"""
    if "--help" in sys.argv or "-h" in sys.argv:
        print_help()
        return 0
    
    # Build command
    cmd = [sys.executable, "app.py"]
    
    # Pass through all arguments except our own
    args = [arg for arg in sys.argv[1:] if arg not in ["--help", "-h"]]
    cmd.extend(args)
    
    # Special handling for convenience
    if "--test" in args:
        # Replace --test with --test-mode for app.py
        cmd = [arg if arg != "--test" else "--test-mode" for arg in cmd]
    
    print("üöÄ –ó–∞–ø—É—Å–∫ PneumoStabSim...")
    print(f"   –ö–æ–º–∞–Ω–¥–∞: {' '.join(cmd)}")
    print()
    
    try:
        # Launch the application
        if "--no-block" in args:
            # Non-blocking launch
            print("üîì –ù–µ–±–ª–æ–∫–∏—Ä—É—é—â–∏–π –∑–∞–ø—É—Å–∫...")
            process = subprocess.Popen(cmd)
            print(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —Å PID {process.pid}")
            print("   –¢–µ—Ä–º–∏–Ω–∞–ª —Å–≤–æ–±–æ–¥–µ–Ω –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥")
            print("   –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á")
            return 0
        else:
            # Blocking launch
            print("üîí –ë–ª–æ–∫–∏—Ä—É—é—â–∏–π –∑–∞–ø—É—Å–∫...")
            result = subprocess.run(cmd)
            return result.returncode
            
    except KeyboardInterrupt:
        print("\nüõë –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (Ctrl+C)")
        return 1
    except FileNotFoundError:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω app.py")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞")
        return 1
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return 1

if __name__ == "__main__":
    sys.exit(main())
