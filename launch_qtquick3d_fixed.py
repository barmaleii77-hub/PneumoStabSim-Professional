#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–û–°–¢–û–Ø–ù–ù–´–ô –õ–ê–£–ù–ß–ï–† PneumoStabSim —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º QtQuick3D
–≠—Ç–æ—Ç —Ñ–∞–π–ª –ì–ê–†–ê–ù–¢–ò–†–£–ï–¢ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É QtQuick3D –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ
"""
import os
import sys
from pathlib import Path


def setup_qt_for_qtquick3d():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Qt –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã QtQuick3D"""
    try:
        import PySide6

        pyside6_path = Path(PySide6.__file__).parent

        # –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è QtQuick3D
        critical_vars = {
            "QT_PLUGIN_PATH": str(pyside6_path / "plugins"),
            "QML_IMPORT_PATH": str(pyside6_path / "qml"),
            "QML2_IMPORT_PATH": str(pyside6_path / "qml"),
            "QTDIR": str(pyside6_path),
            "QSG_RHI_BACKEND": "d3d11" if sys.platform == "win32" else "opengl",
            "QT_QUICK3D_MODULE_PATH": str(pyside6_path / "qml" / "QtQuick3D"),
            "PYTHONIOENCODING": "utf-8",
        }

        for var, value in critical_vars.items():
            os.environ[var] = value

        print("‚úÖ Qt –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –¥–ª—è QtQuick3D")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Qt: {e}")
        return False


if __name__ == "__main__":
    print("üöÄ PneumoStabSim - –ü–û–°–¢–û–Ø–ù–ù–´–ô –õ–ê–£–ù–ß–ï–† —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º QtQuick3D")
    print("=" * 70)

    # –ö–†–ò–¢–ò–ß–ù–û: –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ü–ï–†–ï–î –ª—é–±—ã–º –∏–º–ø–æ—Ä—Ç–æ–º
    if not setup_qt_for_qtquick3d():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Qt –æ–∫—Ä—É–∂–µ–Ω–∏–µ!")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è...")
        sys.exit(1)

    # –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
        current_dir = Path(__file__).parent
        if str(current_dir) not in sys.path:
            sys.path.insert(0, str(current_dir))

        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        import app

        # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º sys.argv –¥–ª—è app.py
        if len(sys.argv) > 0:
            sys.argv[0] = "app.py"

        print("üé¨ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        result = app.main()

        print(f"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –∫–æ–¥–æ–º: {result}")
        sys.exit(result)

    except Exception as e:
        print(f"üíÄ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback

        traceback.print_exc()
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è...")
        sys.exit(1)
