"""Configuration file for the Sphinx documentation builder."""

from __future__ import annotations

import os
import sys
from datetime import datetime
from importlib import metadata

# -- Path setup --------------------------------------------------------------

PROJECT_ROOT = os.path.abspath(os.path.join(__file__, os.pardir))
REPO_ROOT = os.path.abspath(os.path.join(PROJECT_ROOT, os.pardir))
SRC_DIR = os.path.join(REPO_ROOT, "src")

for path in (SRC_DIR, REPO_ROOT):
    if path not in sys.path:
        sys.path.insert(0, path)

# -- Project information -----------------------------------------------------

project = "PneumoStabSim Professional"
author = "PneumoStabSim Team"
current_year = datetime.now().year
copyright = f"{current_year}, {author}"

try:
    release = metadata.version("pneumostabsim")
except metadata.PackageNotFoundError:  # pragma: no cover - fallback for docs build
    release = "0.0.0"
version = release

# -- General configuration ---------------------------------------------------

extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.napoleon",
    "sphinx.ext.viewcode",
]

autosummary_generate = True
autodoc_default_options = {
    "members": True,
    "undoc-members": True,
    "show-inheritance": True,
}

autodoc_mock_imports = [
    "PySide6",
    "shiboken6",
    "OpenGL",
    "PyOpenGL",
    "PyOpenGL_accelerate",
    "numpy",
    "scipy",
    "matplotlib",
    "psutil",
]

templates_path = ["_templates"]
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]

# -- Options for HTML output -------------------------------------------------

html_theme = "sphinx_rtd_theme"
html_static_path = ["_static"]

# -- Autodoc behaviour tweaks -----------------------------------------------


def skip_private_members(app, what, name, obj, skip, options):
    """Skip autogenerated ``__`` members unless documented."""

    if name.startswith("__") and name.endswith("__"):
        return True
    return skip


def setup(app):  # pragma: no cover - sphinx extension hook
    app.connect("autodoc-skip-member", skip_private_members)
